{
    "data": {
        "project": {
            "address": "0xfc5a1a6eb076a2c7ad06ed22c90d7e710e35ad0a",
            "contractName": "GMX",
            "coreIssues": [
                {
                    "issues": [],
                    "scwDescription": "No vulnerable withdrawal functions found",
                    "scwId": "105",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No reentrancy risk found",
                    "scwId": "107",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No locks detected",
                    "scwId": "150",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Verified source code found",
                    "scwId": "185",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [
                                {
                                    "description": "Not found.",
                                    "title": "Mint max supply"
                                },
                                {
                                    "description": "Not found.",
                                    "title": "Mint Timelock"
                                }
                            ],
                            "data": "{\"max_supply\": \"\", \"timelock\": \"\", \"privileged\": [{\"type\": \"private\", \"value\": \"private\"}]}",
                            "description": "Mint function: MintableBaseToken.mint(address,uint256) (GMX.sol#795-797)\n\t- in internal call: _mint(_account,_amount)\n\t\t- In expression: balances[_account] = balances[_account].add(_amount)\n",
                            "end": 797,
                            "governanceInfo": {
                                "owners": [
                                    {
                                        "owner": "",
                                        "timelockDelay": null,
                                        "type": "7"
                                    }
                                ],
                                "worstOwner": {
                                    "owner": "",
                                    "timelockDelay": null,
                                    "type": "7"
                                }
                            },
                            "id": 155392661,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function mint(address _account, uint256 _amount) external override onlyMinter {\n    _mint(_account, _amount);\n}",
                            "start": 795
                        }
                    ],
                    "scwDescription": "A large amount of this token can be minted by a private wallet or contract.",
                    "scwId": "186",
                    "scwTitle": "Mintable"
                },
                {
                    "issues": [],
                    "scwDescription": "Users can always transfer their tokens",
                    "scwId": "189",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract cannot be upgraded",
                    "scwId": "193",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Wallets cannot be blacklisted from transfering the token",
                    "scwId": "208",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No transfer fees found",
                    "scwId": "209",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No transfer limits found",
                    "scwId": "211",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No ERC20 approval vulnerability found",
                    "scwId": "216-a",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract owner cannot abuse ERC20 approvals",
                    "scwId": "216-b",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No ERC20 interface errors found",
                    "scwId": "204-a",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No blocking loops found",
                    "scwId": "218",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No centralized balance controls found",
                    "scwId": "220",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No transfer cooldown times found",
                    "scwId": "219",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No approval restrictions found",
                    "scwId": "223",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "data": "",
                            "description": "Possible Honeypot:\n\t- Function: BaseToken.transfer(address,uint256) (GMX.sol#665-668)\n\t\t- External call: IYieldTracker(yieldTracker).updateRewards(_account)",
                            "end": 668,
                            "governanceInfo": null,
                            "id": 155392666,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function transfer(address _recipient, uint256 _amount) external override returns (bool) {\n    _transfer(msg.sender, _recipient, _amount);\n    return true;\n}",
                            "start": 665
                        },
                        {
                            "additionalData": [],
                            "data": "",
                            "description": "Possible Honeypot:\n\t- Function: BaseToken.transferFrom(address,address,uint256) (GMX.sol#679-688)\n\t\t- External call: IYieldTracker(yieldTracker).updateRewards(_account)",
                            "end": 688,
                            "governanceInfo": null,
                            "id": 155392667,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function transferFrom(address _sender, address _recipient, uint256 _amount) external override returns (bool) {\n    if (isHandler[msg.sender]) {\n        _transfer(_sender, _recipient, _amount);\n        return true;\n    }\n    uint256 nextAllowance = allowances[_sender][msg.sender].sub(_amount, \"BaseToken: transfer amount exceeds allowance\");\n    _approve(_sender, msg.sender, nextAllowance);\n    _transfer(_sender, _recipient, _amount);\n    return true;\n}",
                            "start": 679
                        }
                    ],
                    "scwDescription": "The contract contains external calls which cannot be analyzed by the scanner, and could be potentially dangerous. Please use caution when using this contract.",
                    "scwId": "210-b",
                    "scwTitle": "Potential Honeypot"
                },
                {
                    "issues": [],
                    "scwDescription": "No airdrop-specific code found",
                    "scwId": "10004",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable ownership functions found.",
                    "scwId": "230",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No retrievable ownership found.",
                    "scwId": "231",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract was not deployed recently.",
                    "scwId": "10010",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No mixers utilized by contract deployer.",
                    "scwId": "10003",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No adjustable maximum supply found.",
                    "scwId": "233",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No previous scams by owner's wallet found.",
                    "scwId": "10016",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "The contract operates without custom fees, ensuring security and financial integrity.",
                    "scwId": "236",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "data": "{\"privileged\": [{\"type\": \"private\", \"value\": \"private\"}]}",
                            "description": "whitelisted function: BaseToken.transferFrom(address,address,uint256) (GMX.sol#679-688)\n\t- in expression: isHandler[msg.sender]\n",
                            "end": 688,
                            "governanceInfo": {
                                "owners": [
                                    {
                                        "owner": "",
                                        "timelockDelay": null,
                                        "type": "7"
                                    }
                                ],
                                "worstOwner": {
                                    "owner": "",
                                    "timelockDelay": null,
                                    "type": "7"
                                }
                            },
                            "id": 155392668,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function transferFrom(address _sender, address _recipient, uint256 _amount) external override returns (bool) {\n    if (isHandler[msg.sender]) {\n        _transfer(_sender, _recipient, _amount);\n        return true;\n    }\n    uint256 nextAllowance = allowances[_sender][msg.sender].sub(_amount, \"BaseToken: transfer amount exceeds allowance\");\n    _approve(_sender, msg.sender, nextAllowance);\n    _transfer(_sender, _recipient, _amount);\n    return true;\n}",
                            "start": 679
                        },
                        {
                            "additionalData": [],
                            "data": "{\"privileged\": [{\"type\": \"private\", \"value\": \"private\"}]}",
                            "description": "whitelisted function: BaseToken.transfer(address,uint256) (GMX.sol#665-668)\n\t- in internal call: BaseToken._transfer(address,address,uint256) (GMX.sol#720-742)\n\t\t- in expression require(bool,string)(isHandler[msg.sender],BaseToken: msg.sender not whitelisted)\n",
                            "end": 668,
                            "governanceInfo": {
                                "owners": [
                                    {
                                        "owner": "",
                                        "timelockDelay": null,
                                        "type": "7"
                                    }
                                ],
                                "worstOwner": {
                                    "owner": "",
                                    "timelockDelay": null,
                                    "type": "7"
                                }
                            },
                            "id": 155392669,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function transfer(address _recipient, uint256 _amount) external override returns (bool) {\n    _transfer(msg.sender, _recipient, _amount);\n    return true;\n}",
                            "start": 665
                        }
                    ],
                    "scwDescription": "Detected whitelisting feature enables unique users to bypass restrictions, potentially raising security and integrity concerns.",
                    "scwId": "237",
                    "scwTitle": "Whitelisting"
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract's transfer function secure with unchangeable router, no issues, ensuring smooth, secure token transfers.",
                    "scwId": "238",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract safeguarded against native token draining in token transfers/approvals.",
                    "scwId": "239",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract with recent user interactions, active use, and operational functionality, not abandoned.",
                    "scwId": "10022",
                    "scwTitle": "Recent Interaction was within 30 Days."
                },
                {
                    "issues": [],
                    "scwDescription": "No instances of native token drainage upon revoking tokens were detected in the contract.",
                    "scwId": "10023",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Securely hardcoded Uniswap router ensuring protection against router alterations.",
                    "scwId": "241",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "AI model detects robust, genuine token and user activity, earning a high score, indicating trustworthiness and community integrity.",
                    "scwId": "10024",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract with minimal revocations, a positive indicator for stable, secure functionality.",
                    "scwId": "10025",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract's initializer protected, enhancing security and preventing unintended issues.",
                    "scwId": "242",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract intact, not self-destructed, ensuring continuity and functionality.",
                    "scwId": "10026",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract's timelock setting aligns with 24 hours or more, enhancing security and reliability.",
                    "scwId": "10027",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No suspicious activity has been detected.",
                    "scwId": "10028",
                    "scwTitle": null
                }
            ],
            "diffs": null,
            "estimatedAnalyzingTime": 0,
            "firstTxBlock": null,
            "firstTxDate": "2021-07-22T12:54:53.000Z",
            "firstTxFrom": "0x5f799f365fa8a2b60ac0429c48b153ca5a6f0cf8",
            "generalIssues": [
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "Different versions of Solidity is used:\n\t- Version used: ['0.6.12', '^0.6.2']\n\t- 0.6.12 (GMX.sol#7)\n\t- 0.6.12 (GMX.sol#169)\n\t- ^0.6.2 (GMX.sol#249)\n\t- 0.6.12 (GMX.sol#441)\n\t- 0.6.12 (GMX.sol#517)\n\t- 0.6.12 (GMX.sol#530)\n\t- 0.6.12 (GMX.sol#542)\n\t- 0.6.12 (GMX.sol#765)\n\t- 0.6.12 (GMX.sol#776)\n\t- 0.6.12 (GMX.sol#808)\n",
                            "end": 7,
                            "governanceInfo": null,
                            "id": 155392655,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "pragma solidity 0.6.12;",
                            "start": 7
                        }
                    ],
                    "scwDescription": "This contract may not function as expected due to inconsistent solidity compiler versions being specified.",
                    "scwId": "103",
                    "scwTitle": "Floating Pragma"
                },
                {
                    "issues": [],
                    "scwDescription": "No unchecked call responses found",
                    "scwId": "104",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable self-destruct functions found",
                    "scwId": "106",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No assertion vulnerabilities found",
                    "scwId": "110",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No old solidity code found",
                    "scwId": "111",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No external delegated calls found",
                    "scwId": "112",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "Medium",
                            "description": "BaseToken.recoverClaim(address,address) (GMX.sol#636-641) has external calls inside a loop: IYieldTracker(yieldTracker).claim(_account,_receiver) (GMX.sol#639)\n",
                            "end": 641,
                            "governanceInfo": null,
                            "id": 155392664,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function recoverClaim(address _account, address _receiver) external onlyAdmin {\n    for (uint256 i = 0; i < yieldTrackers.length; i++) {\n        address yieldTracker = yieldTrackers[i];\n        IYieldTracker(yieldTracker).claim(_account, _receiver);\n    }\n}",
                            "start": 636
                        },
                        {
                            "additionalData": [],
                            "confidence": "Medium",
                            "description": "BaseToken.claim(address) (GMX.sol#643-648) has external calls inside a loop: IYieldTracker(yieldTracker).claim(msg.sender,_receiver) (GMX.sol#646)\n",
                            "end": 648,
                            "governanceInfo": null,
                            "id": 155392665,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function claim(address _receiver) external {\n    for (uint256 i = 0; i < yieldTrackers.length; i++) {\n        address yieldTracker = yieldTrackers[i];\n        IYieldTracker(yieldTracker).claim(msg.sender, _receiver);\n    }\n}",
                            "start": 643
                        }
                    ],
                    "scwDescription": "This contract uses external calls that may fail, resulting in loss of functionality.",
                    "scwId": "113",
                    "scwTitle": "DoS with Failed Call"
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable authentication calls found",
                    "scwId": "115",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No invalid character typos found",
                    "scwId": "129",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No RTL characters found",
                    "scwId": "130",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No dead code found",
                    "scwId": "135",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No risky data allocation found",
                    "scwId": "138",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No uninitialized state variables found",
                    "scwId": "142",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No uninitialized storage variables found",
                    "scwId": "143",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable initialization functions found",
                    "scwId": "144",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No risky data handling found",
                    "scwId": "145",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No number accuracy bug found",
                    "scwId": "146",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No out-of-range number vulnerability found",
                    "scwId": "147",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No map data deletion vulnerabilities found",
                    "scwId": "151",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No tautologies or contradictions found",
                    "scwId": "152",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No faulty true/false values found",
                    "scwId": "153",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No innacurate divisions found",
                    "scwId": "156",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No redundant constructor calls found",
                    "scwId": "157",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable transfers found",
                    "scwId": "158",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable return values found",
                    "scwId": "159",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No uninitialized local variables found",
                    "scwId": "160",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No default function responses found",
                    "scwId": "161",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No missing arithmetic events found",
                    "scwId": "167-a",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "Medium",
                            "description": "BaseToken.setGov(address) (GMX.sol#588-590) should emit an event for: \n\t- gov = _gov (GMX.sol#589) \n",
                            "end": 590,
                            "governanceInfo": null,
                            "id": 155392662,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function setGov(address _gov) external onlyGov {\n    gov = _gov;\n}",
                            "start": 588
                        }
                    ],
                    "scwDescription": "This contract is missing useful events with regards to access control changes.",
                    "scwId": "167-b",
                    "scwTitle": "Missing Access Control Events"
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "Medium",
                            "description": "BaseToken.setGov(address)._gov (GMX.sol#588) lacks a zero-check on :\n\t\t- gov = _gov (GMX.sol#589)\n",
                            "end": 588,
                            "governanceInfo": null,
                            "id": 155392663,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function setGov(address _gov) external onlyGov {",
                            "start": 588
                        }
                    ],
                    "scwDescription": "Some functions in this contract may not appropriately check for zero addresses being used.",
                    "scwId": "168",
                    "scwTitle": "Missing Zero Address Validation"
                },
                {
                    "issues": [],
                    "scwDescription": "No redundant true/false comparisons found",
                    "scwId": "170",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No state variables vulnerable through function calls found",
                    "scwId": "172",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "Low level call in Address.sendValue(address,uint256) (GMX.sol#299-305):\n\t- (success) = recipient.call{value: amount}() (GMX.sol#303)\n",
                            "end": 305,
                            "governanceInfo": null,
                            "id": 155392657,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function sendValue(address payable recipient, uint256 amount) internal {\n    require(address(this).balance >= amount, \"Address: insufficient balance\");\n    // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n    (bool success, ) = recipient.call{ value: amount }(\"\");\n    require(success, \"Address: unable to send value, recipient may have reverted\");\n}",
                            "start": 299
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (GMX.sol#360-367):\n\t- (success,returndata) = target.call{value: value}(data) (GMX.sol#365)\n",
                            "end": 367,
                            "governanceInfo": null,
                            "id": 155392658,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n    require(address(this).balance >= value, \"Address: insufficient balance for call\");\n    require(isContract(target), \"Address: call to non-contract\");\n    // solhint-disable-next-line avoid-low-level-calls\n    (bool success, bytes memory returndata) = target.call{ value: value }(data);\n    return _verifyCallResult(success, returndata, errorMessage);\n}",
                            "start": 360
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "Low level call in Address.functionStaticCall(address,bytes,string) (GMX.sol#385-391):\n\t- (success,returndata) = target.staticcall(data) (GMX.sol#389)\n",
                            "end": 391,
                            "governanceInfo": null,
                            "id": 155392659,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n    require(isContract(target), \"Address: static call to non-contract\");\n    // solhint-disable-next-line avoid-low-level-calls\n    (bool success, bytes memory returndata) = target.staticcall(data);\n    return _verifyCallResult(success, returndata, errorMessage);\n}",
                            "start": 385
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "Low level call in Address.functionDelegateCall(address,bytes,string) (GMX.sol#409-415):\n\t- (success,returndata) = target.delegatecall(data) (GMX.sol#413)\n",
                            "end": 415,
                            "governanceInfo": null,
                            "id": 155392660,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n    require(isContract(target), \"Address: delegate call to non-contract\");\n    // solhint-disable-next-line avoid-low-level-calls\n    (bool success, bytes memory returndata) = target.delegatecall(data);\n    return _verifyCallResult(success, returndata, errorMessage);\n}",
                            "start": 409
                        }
                    ],
                    "scwDescription": "This contract uses low level calls, which may be unsafe.",
                    "scwId": "173",
                    "scwTitle": "Low Level Calls"
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "Pragma version^0.6.2 (GMX.sol#249) allows old versions\n",
                            "end": 249,
                            "governanceInfo": null,
                            "id": 155392656,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "pragma solidity ^0.6.2;",
                            "start": 249
                        }
                    ],
                    "scwDescription": "This contract uses an unconventional or very old version of Solidity.",
                    "scwId": "177",
                    "scwTitle": "Incorrect Solidity Version"
                },
                {
                    "issues": [],
                    "scwDescription": "No expensive loops found",
                    "scwId": "179",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No bad numeric notation practices found",
                    "scwId": "182",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No missing constant declarations found",
                    "scwId": "183",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No missing external function declarations found",
                    "scwId": "184",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable payable functions found",
                    "scwId": "224",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable message values found",
                    "scwId": "225",
                    "scwTitle": null
                }
            ],
            "governance": {
                "contractOwners": [
                    {
                        "governance": null,
                        "impact": "High",
                        "modifiable": false,
                        "multisig": null,
                        "owner": "",
                        "timelock": null,
                        "timelockDelay": null,
                        "type": "7"
                    }
                ],
                "issueOwners": [
                    {
                        "owners": [
                            {
                                "governance": null,
                                "impact": "High",
                                "modifiable": false,
                                "multisig": null,
                                "owner": "",
                                "timelock": null,
                                "timelockDelay": null,
                                "type": "7"
                            }
                        ],
                        "scwId": "186"
                    },
                    {
                        "owners": [
                            {
                                "governance": null,
                                "impact": "High",
                                "modifiable": false,
                                "multisig": null,
                                "owner": "",
                                "timelock": null,
                                "timelockDelay": null,
                                "type": "7"
                            }
                        ],
                        "scwId": "237"
                    }
                ],
                "proxyOwners": [],
                "visibleOwner": ""
            },
            "inProgress": false,
            "initialFunder": null,
            "isProxyImplementation": false,
            "logo": "",
            "name": "GMX(GMX)",
            "network": 42161,
            "pairInfo": null,
            "projectFullName": "",
            "projectName": "",
            "protocol": "erc20",
            "proxyContractAddress": null,
            "proxyData": null,
            "rektLink": null,
            "sourceCodeLink": "https://scan-results.de.fi/0xfc5a1a6eb076a2c7ad06ed22c90d7e710e35ad0a_42161_src.json",
            "stats": {
                "percentage": 100,
                "scammed": false
            },
            "whitelisted": true
        }
    }
}