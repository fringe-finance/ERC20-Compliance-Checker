{
    "data": {
        "project": {
            "address": "0x3472a5a71965499acd81997a54bba8d852c6e53d",
            "contractName": "MiniMeToken",
            "coreIssues": [
                {
                    "issues": [],
                    "scwDescription": "No vulnerable withdrawal functions found",
                    "scwId": "105",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No reentrancy risk found",
                    "scwId": "107",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No locks detected",
                    "scwId": "150",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Verified source code found",
                    "scwId": "185",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No mintable risks found",
                    "scwId": "186",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "data": "{\"privileged\": [{\"type\": \"var\", \"value\": \"controller\", \"modifiable\": true}]}",
                            "description": "Pausable function: MiniMeToken.transferFrom(address,address,uint256) (MiniMeToken.sol#188-203)\n\t- In expression: require(bool)(transfersEnabled)\n",
                            "end": 203,
                            "governanceInfo": {
                                "owners": [
                                    {
                                        "owner": "0xdDB2dfad74F64F14bb1A1cbaB9C03bc0eed74493",
                                        "timelockDelay": null,
                                        "type": "5"
                                    }
                                ],
                                "worstOwner": {
                                    "owner": "0xdDB2dfad74F64F14bb1A1cbaB9C03bc0eed74493",
                                    "timelockDelay": null,
                                    "type": "5"
                                }
                            },
                            "id": 156567228,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function transferFrom(address _from, address _to, uint256 _amount) public returns (bool success) {\n    // The controller of this contract can move tokens around at will,\n    //  this is important to recognize! Confirm that you trust the\n    //  controller of this contract, which in most situations should be\n    //  another open source smart contract or 0x0\n    if (msg.sender != controller) {\n        require(transfersEnabled);\n        // The standard ERC 20 transferFrom functionality\n        if (allowed[_from][msg.sender] < _amount)\n            return false;\n        allowed[_from][msg.sender] -= _amount;\n    }\n    return doTransfer(_from, _to, _amount);\n}",
                            "start": 188
                        },
                        {
                            "additionalData": [],
                            "data": "{\"privileged\": [{\"type\": \"var\", \"value\": \"controller\", \"modifiable\": true}]}",
                            "description": "Pausable function: MiniMeToken.transfer(address,uint256) (MiniMeToken.sol#177-180)\n\t- In expression: require(bool)(transfersEnabled)\n",
                            "end": 180,
                            "governanceInfo": {
                                "owners": [
                                    {
                                        "owner": "0xdDB2dfad74F64F14bb1A1cbaB9C03bc0eed74493",
                                        "timelockDelay": null,
                                        "type": "5"
                                    }
                                ],
                                "worstOwner": {
                                    "owner": "0xdDB2dfad74F64F14bb1A1cbaB9C03bc0eed74493",
                                    "timelockDelay": null,
                                    "type": "5"
                                }
                            },
                            "id": 156567229,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function transfer(address _to, uint256 _amount) public returns (bool success) {\n    require(transfersEnabled);\n    return doTransfer(msg.sender, _to, _amount);\n}",
                            "start": 177
                        },
                        {
                            "additionalData": [],
                            "data": "{\"privileged\": [{\"type\": \"var\", \"value\": \"controller\", \"modifiable\": true}]}",
                            "description": "Pausable function: MiniMeToken.approve(address,uint256) (MiniMeToken.sol#254-272)\n\t- In expression: require(bool)(transfersEnabled)\n",
                            "end": 272,
                            "governanceInfo": {
                                "owners": [
                                    {
                                        "owner": "0xdDB2dfad74F64F14bb1A1cbaB9C03bc0eed74493",
                                        "timelockDelay": null,
                                        "type": "5"
                                    }
                                ],
                                "worstOwner": {
                                    "owner": "0xdDB2dfad74F64F14bb1A1cbaB9C03bc0eed74493",
                                    "timelockDelay": null,
                                    "type": "5"
                                }
                            },
                            "id": 156567230,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function approve(address _spender, uint256 _amount) public returns (bool success) {\n    require(transfersEnabled);\n    // To change the approve amount you first have to reduce the addresses`\n    //  allowance to zero by calling `approve(_spender,0)` if it is not\n    //  already 0 to mitigate the race condition described here:\n    //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\n    // Alerts the token controller of the approve function call\n    if (isContract(controller)) {\n        // Adding the ` == true` makes the linter shut up so...\n        require(ITokenController(controller).onApprove(msg.sender, _spender, _amount) == true);\n    }\n    allowed[msg.sender][_spender] = _amount;\n    Approval(msg.sender, _spender, _amount);\n    return true;\n}",
                            "start": 254
                        }
                    ],
                    "scwDescription": "Token transfers can be paused, preventing swapping or selling.",
                    "scwId": "189",
                    "scwTitle": "Pausable"
                },
                {
                    "issues": [],
                    "scwDescription": "Contract cannot be upgraded",
                    "scwId": "193",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Wallets cannot be blacklisted from transfering the token",
                    "scwId": "208",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No transfer fees found",
                    "scwId": "209",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No transfer limits found",
                    "scwId": "211",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No ERC20 approval vulnerability found",
                    "scwId": "216-a",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract owner cannot abuse ERC20 approvals",
                    "scwId": "216-b",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No ERC20 interface errors found",
                    "scwId": "204-a",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No blocking loops found",
                    "scwId": "218",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "data": "{\"privileged\": [{\"type\": \"var\", \"value\": \"controller\", \"modifiable\": true}]}",
                            "description": "Centralized token balance modification in:MiniMeToken.transferFrom(address,address,uint256) (MiniMeToken.sol#188-203)\t- in expression:doTransfer(_from,_to,_amount)",
                            "end": 203,
                            "governanceInfo": {
                                "owners": [
                                    {
                                        "owner": "0xdDB2dfad74F64F14bb1A1cbaB9C03bc0eed74493",
                                        "timelockDelay": null,
                                        "type": "5"
                                    }
                                ],
                                "worstOwner": {
                                    "owner": "0xdDB2dfad74F64F14bb1A1cbaB9C03bc0eed74493",
                                    "timelockDelay": null,
                                    "type": "5"
                                }
                            },
                            "id": 156567227,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function transferFrom(address _from, address _to, uint256 _amount) public returns (bool success) {\n    // The controller of this contract can move tokens around at will,\n    //  this is important to recognize! Confirm that you trust the\n    //  controller of this contract, which in most situations should be\n    //  another open source smart contract or 0x0\n    if (msg.sender != controller) {\n        require(transfersEnabled);\n        // The standard ERC 20 transferFrom functionality\n        if (allowed[_from][msg.sender] < _amount)\n            return false;\n        allowed[_from][msg.sender] -= _amount;\n    }\n    return doTransfer(_from, _to, _amount);\n}",
                            "start": 188
                        }
                    ],
                    "scwDescription": "The contract owner is able to control all token holders' balances.",
                    "scwId": "220",
                    "scwTitle": "Centralized Balance Controls"
                },
                {
                    "issues": [],
                    "scwDescription": "No transfer cooldown times found",
                    "scwId": "219",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No approval restrictions found",
                    "scwId": "223",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "data": "",
                            "description": "Possible Honeypot:\n\t- Function: MiniMeToken.transfer(address,uint256) (MiniMeToken.sol#177-180)\n\t\t- External call: parentToken.balanceOfAt(_owner,min(_blockNumber,parentSnapShotBlock))\t\t- External call: ITokenController(controller).onTransfer(_from,_to,_amount)",
                            "end": 180,
                            "governanceInfo": null,
                            "id": 156567231,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function transfer(address _to, uint256 _amount) public returns (bool success) {\n    require(transfersEnabled);\n    return doTransfer(msg.sender, _to, _amount);\n}",
                            "start": 177
                        },
                        {
                            "additionalData": [],
                            "data": "",
                            "description": "Possible Honeypot:\n\t- Function: MiniMeToken.transferFrom(address,address,uint256) (MiniMeToken.sol#188-203)\n\t\t- External call: parentToken.balanceOfAt(_owner,min(_blockNumber,parentSnapShotBlock))\t\t- External call: ITokenController(controller).onTransfer(_from,_to,_amount)",
                            "end": 203,
                            "governanceInfo": null,
                            "id": 156567232,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function transferFrom(address _from, address _to, uint256 _amount) public returns (bool success) {\n    // The controller of this contract can move tokens around at will,\n    //  this is important to recognize! Confirm that you trust the\n    //  controller of this contract, which in most situations should be\n    //  another open source smart contract or 0x0\n    if (msg.sender != controller) {\n        require(transfersEnabled);\n        // The standard ERC 20 transferFrom functionality\n        if (allowed[_from][msg.sender] < _amount)\n            return false;\n        allowed[_from][msg.sender] -= _amount;\n    }\n    return doTransfer(_from, _to, _amount);\n}",
                            "start": 188
                        },
                        {
                            "additionalData": [],
                            "data": "",
                            "description": "Possible Honeypot:\n\t- Function: MiniMeToken.approve(address,uint256) (MiniMeToken.sol#254-272)\n\t\t- External call: ITokenController(controller).onApprove(msg.sender,_spender,_amount)",
                            "end": 272,
                            "governanceInfo": null,
                            "id": 156567233,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function approve(address _spender, uint256 _amount) public returns (bool success) {\n    require(transfersEnabled);\n    // To change the approve amount you first have to reduce the addresses`\n    //  allowance to zero by calling `approve(_spender,0)` if it is not\n    //  already 0 to mitigate the race condition described here:\n    //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\n    // Alerts the token controller of the approve function call\n    if (isContract(controller)) {\n        // Adding the ` == true` makes the linter shut up so...\n        require(ITokenController(controller).onApprove(msg.sender, _spender, _amount) == true);\n    }\n    allowed[msg.sender][_spender] = _amount;\n    Approval(msg.sender, _spender, _amount);\n    return true;\n}",
                            "start": 254
                        }
                    ],
                    "scwDescription": "The contract contains external calls which cannot be analyzed by the scanner, and could be potentially dangerous. Please use caution when using this contract.",
                    "scwId": "210-b",
                    "scwTitle": "Potential Honeypot"
                },
                {
                    "issues": [],
                    "scwDescription": "No airdrop-specific code found",
                    "scwId": "10004",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable ownership functions found.",
                    "scwId": "230",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No retrievable ownership found.",
                    "scwId": "231",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract was not deployed recently.",
                    "scwId": "10010",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [
                                {
                                    "description": "Tornado.Cash",
                                    "title": "Funded By"
                                },
                                {
                                    "description": "1",
                                    "title": "Amount of transactions from mixer"
                                },
                                {
                                    "description": "0xf701d519bf7127a2237d0eb4d02263ea76195717edb0c3983f539aa73570544a",
                                    "title": "Transactions hash"
                                },
                                {
                                    "description": "11/25/2020, 01:30:28",
                                    "title": "Oldest transaction from mixer"
                                }
                            ],
                            "data": null,
                            "description": "The contract's deployer used a mixer to fund their wallet. This may be an indication of an intent to rugpull or avoid responsibility.",
                            "end": null,
                            "governanceInfo": null,
                            "id": -20,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "",
                            "start": null
                        }
                    ],
                    "scwDescription": "The contract's deployer used a mixer to fund their wallet. This may be an indication of an intent to rugpull or avoid responsibility.",
                    "scwId": "10003",
                    "scwTitle": "Mixer Utilized"
                },
                {
                    "issues": [],
                    "scwDescription": "No adjustable maximum supply found.",
                    "scwId": "233",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No previous scams by owner's wallet found.",
                    "scwId": "10016",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "The contract operates without custom fees, ensuring security and financial integrity.",
                    "scwId": "236",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract lacks a whitelisting feature, reinforcing standard restrictions and access controls, enhancing overall security and integrity.",
                    "scwId": "237",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract's transfer function secure with unchangeable router, no issues, ensuring smooth, secure token transfers.",
                    "scwId": "238",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract safeguarded against native token draining in token transfers/approvals.",
                    "scwId": "239",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract with recent user interactions, active use, and operational functionality, not abandoned.",
                    "scwId": "10022",
                    "scwTitle": "Recent Interaction was within 30 Days."
                },
                {
                    "issues": [],
                    "scwDescription": "No instances of native token drainage upon revoking tokens were detected in the contract.",
                    "scwId": "10023",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Securely hardcoded Uniswap router ensuring protection against router alterations.",
                    "scwId": "241",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "AI model detects robust, genuine token and user activity, earning a high score, indicating trustworthiness and community integrity.",
                    "scwId": "10024",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract with minimal revocations, a positive indicator for stable, secure functionality.",
                    "scwId": "10025",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract's initializer protected, enhancing security and preventing unintended issues.",
                    "scwId": "242",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract intact, not self-destructed, ensuring continuity and functionality.",
                    "scwId": "10026",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract's timelock setting aligns with 24 hours or more, enhancing security and reliability.",
                    "scwId": "10027",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No suspicious activity has been detected.",
                    "scwId": "10028",
                    "scwTitle": null
                }
            ],
            "diffs": null,
            "estimatedAnalyzingTime": 0,
            "firstTxBlock": null,
            "firstTxDate": "2020-12-03T17:49:24.000Z",
            "firstTxFrom": "0xda25ee226e534d868f0dd8a459536b03fee9079b",
            "generalIssues": [
                {
                    "issues": [],
                    "scwDescription": "No compiler version inconsistencies found",
                    "scwId": "103",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No unchecked call responses found",
                    "scwId": "104",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable self-destruct functions found",
                    "scwId": "106",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No assertion vulnerabilities found",
                    "scwId": "110",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No old solidity code found",
                    "scwId": "111",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No external delegated calls found",
                    "scwId": "112",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No external call dependency found",
                    "scwId": "113",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable authentication calls found",
                    "scwId": "115",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No invalid character typos found",
                    "scwId": "129",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No RTL characters found",
                    "scwId": "130",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No dead code found",
                    "scwId": "135",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No risky data allocation found",
                    "scwId": "138",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No uninitialized state variables found",
                    "scwId": "142",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No uninitialized storage variables found",
                    "scwId": "143",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable initialization functions found",
                    "scwId": "144",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No risky data handling found",
                    "scwId": "145",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No number accuracy bug found",
                    "scwId": "146",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No out-of-range number vulnerability found",
                    "scwId": "147",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No map data deletion vulnerabilities found",
                    "scwId": "151",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No tautologies or contradictions found",
                    "scwId": "152",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No faulty true/false values found",
                    "scwId": "153",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No innacurate divisions found",
                    "scwId": "156",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No redundant constructor calls found",
                    "scwId": "157",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "Medium",
                            "description": "MiniMeToken.claimTokens(address) (MiniMeToken.sol#532-542) ignores return value by token.transfer(controller,balance) (MiniMeToken.sol#540)\n",
                            "end": 542,
                            "governanceInfo": null,
                            "id": 156567234,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function claimTokens(address _token) onlyController public {\n    if (_token == 0x0) {\n        controller.transfer(this.balance);\n        return;\n    }\n    MiniMeToken token = MiniMeToken(_token);\n    uint balance = token.balanceOf(this);\n    token.transfer(controller, balance);\n    ClaimedTokens(_token, controller, balance);\n}",
                            "start": 532
                        }
                    ],
                    "scwDescription": "A transfer call made in this contract may be unstable and cause tokens to become stuck",
                    "scwId": "158",
                    "scwTitle": "Unchecked Transfer"
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable return values found",
                    "scwId": "159",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No uninitialized local variables found",
                    "scwId": "160",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No default function responses found",
                    "scwId": "161",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No missing arithmetic events found",
                    "scwId": "167-a",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "Medium",
                            "description": "Controlled.changeController(address) (MiniMeToken.sol#66-68) should emit an event for: \n\t- controller = _newController (MiniMeToken.sol#67) \n",
                            "end": 68,
                            "governanceInfo": null,
                            "id": 156567225,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function changeController(address _newController) onlyController  public {\n    controller = _newController;\n}",
                            "start": 66
                        }
                    ],
                    "scwDescription": "This contract is missing useful events with regards to access control changes.",
                    "scwId": "167-b",
                    "scwTitle": "Missing Access Control Events"
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "Medium",
                            "description": "Controlled.changeController(address)._newController (MiniMeToken.sol#66) lacks a zero-check on :\n\t\t- controller = _newController (MiniMeToken.sol#67)\n",
                            "end": 66,
                            "governanceInfo": null,
                            "id": 156567226,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function changeController(address _newController) onlyController  public {",
                            "start": 66
                        }
                    ],
                    "scwDescription": "Some functions in this contract may not appropriately check for zero addresses being used.",
                    "scwId": "168",
                    "scwTitle": "Missing Zero Address Validation"
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "MiniMeToken.doTransfer(address,address,uint256) (MiniMeToken.sol#211-240) compares to a boolean constant:\n\t-require(bool)(ITokenController(controller).onTransfer(_from,_to,_amount) == true) (MiniMeToken.sol#227)\n",
                            "end": 240,
                            "governanceInfo": null,
                            "id": 156567210,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function doTransfer(address _from, address _to, uint _amount) internal returns(bool) {\n    if (_amount == 0) {\n        return true;\n    }\n    require(parentSnapShotBlock < block.number);\n    // Do not allow transfer to 0x0 or the token contract itself\n    require((_to != 0) && (_to != address(this)));\n    // If the amount being transfered is more than the balance of the\n    //  account the transfer returns false\n    var previousBalanceFrom = balanceOfAt(_from, block.number);\n    if (previousBalanceFrom < _amount) {\n        return false;\n    }\n    // Alerts the token controller of the transfer\n    if (isContract(controller)) {\n        // Adding the ` == true` makes the linter shut up so...\n        require(ITokenController(controller).onTransfer(_from, _to, _amount) == true);\n    }\n    // First update the balance array with the new value for the address\n    //  sending the tokens\n    updateValueAtNow(balances[_from], previousBalanceFrom - _amount);\n    // Then update the balance array with the new value for the address\n    //  receiving the tokens\n    var previousBalanceTo = balanceOfAt(_to, block.number);\n    require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\n    updateValueAtNow(balances[_to], previousBalanceTo + _amount);\n    // An event to make the transfer easy to find on the blockchain\n    Transfer(_from, _to, _amount);\n    return true;\n}",
                            "start": 211
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "MiniMeToken.approve(address,uint256) (MiniMeToken.sol#254-272) compares to a boolean constant:\n\t-require(bool)(ITokenController(controller).onApprove(msg.sender,_spender,_amount) == true) (MiniMeToken.sol#266)\n",
                            "end": 272,
                            "governanceInfo": null,
                            "id": 156567211,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function approve(address _spender, uint256 _amount) public returns (bool success) {\n    require(transfersEnabled);\n    // To change the approve amount you first have to reduce the addresses`\n    //  allowance to zero by calling `approve(_spender,0)` if it is not\n    //  already 0 to mitigate the race condition described here:\n    //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\n    // Alerts the token controller of the approve function call\n    if (isContract(controller)) {\n        // Adding the ` == true` makes the linter shut up so...\n        require(ITokenController(controller).onApprove(msg.sender, _spender, _amount) == true);\n    }\n    allowed[msg.sender][_spender] = _amount;\n    Approval(msg.sender, _spender, _amount);\n    return true;\n}",
                            "start": 254
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "MiniMeToken.fallback() (MiniMeToken.sol#518-522) compares to a boolean constant:\n\t-require(bool)(ITokenController(controller).proxyPayment.value(msg.value)(msg.sender) == true) (MiniMeToken.sol#521)\n",
                            "end": 522,
                            "governanceInfo": null,
                            "id": 156567212,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function () external payable {\n    require(isContract(controller));\n    // Adding the ` == true` makes the linter shut up so...\n    require(ITokenController(controller).proxyPayment.value(msg.value)(msg.sender) == true);\n}",
                            "start": 518
                        }
                    ],
                    "scwDescription": "This contract compares boolean constants to true or false, which is unnecessary.",
                    "scwId": "170",
                    "scwTitle": "Boolean Constant Comparison"
                },
                {
                    "issues": [],
                    "scwDescription": "No state variables vulnerable through function calls found",
                    "scwId": "172",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No buggy low-level calls found",
                    "scwId": "173",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "Pragma version^0.4.24 (MiniMeToken.sol#1) allows old versions\n",
                            "end": 1,
                            "governanceInfo": null,
                            "id": 156567223,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "pragma solidity ^0.4.24;",
                            "start": 1
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "solc-0.4.24 is not recommended for deployment\n",
                            "end": 0,
                            "governanceInfo": null,
                            "id": 156567224,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "",
                            "start": 0
                        }
                    ],
                    "scwDescription": "This contract uses an unconventional or very old version of Solidity.",
                    "scwId": "177",
                    "scwTitle": "Incorrect Solidity Version"
                },
                {
                    "issues": [],
                    "scwDescription": "No expensive loops found",
                    "scwId": "179",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No bad numeric notation practices found",
                    "scwId": "182",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "MiniMeToken.version (MiniMeToken.sol#88) should be constant\n",
                            "end": 88,
                            "governanceInfo": null,
                            "id": 156567213,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "string public version = \"MMT_0.1\"; //An arbitrary versioning scheme",
                            "start": 88
                        }
                    ],
                    "scwDescription": "Some state variables in this contract should be declared as constant.",
                    "scwId": "183",
                    "scwTitle": "State Variables Should be Declared Constant"
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "transfer(address,uint256) should be declared external:\n\t- MiniMeToken.transfer(address,uint256) (MiniMeToken.sol#177-180)\n",
                            "end": 180,
                            "governanceInfo": null,
                            "id": 156567214,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function transfer(address _to, uint256 _amount) public returns (bool success) {\n    require(transfersEnabled);\n    return doTransfer(msg.sender, _to, _amount);\n}",
                            "start": 177
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "transferFrom(address,address,uint256) should be declared external:\n\t- MiniMeToken.transferFrom(address,address,uint256) (MiniMeToken.sol#188-203)\n",
                            "end": 203,
                            "governanceInfo": null,
                            "id": 156567215,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function transferFrom(address _from, address _to, uint256 _amount) public returns (bool success) {\n    // The controller of this contract can move tokens around at will,\n    //  this is important to recognize! Confirm that you trust the\n    //  controller of this contract, which in most situations should be\n    //  another open source smart contract or 0x0\n    if (msg.sender != controller) {\n        require(transfersEnabled);\n        // The standard ERC 20 transferFrom functionality\n        if (allowed[_from][msg.sender] < _amount)\n            return false;\n        allowed[_from][msg.sender] -= _amount;\n    }\n    return doTransfer(_from, _to, _amount);\n}",
                            "start": 188
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "allowance(address,address) should be declared external:\n\t- MiniMeToken.allowance(address,address) (MiniMeToken.sol#279-281)\n",
                            "end": 281,
                            "governanceInfo": null,
                            "id": 156567216,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\n    return allowed[_owner][_spender];\n}",
                            "start": 279
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "approveAndCall(ApproveAndCallFallBack,uint256,bytes) should be declared external:\n\t- MiniMeToken.approveAndCall(ApproveAndCallFallBack,uint256,bytes) (MiniMeToken.sol#290-301)\n",
                            "end": 301,
                            "governanceInfo": null,
                            "id": 156567217,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function approveAndCall(ApproveAndCallFallBack _spender, uint256 _amount, bytes _extraData) public returns (bool success) {\n    require(approve(_spender, _amount));\n    _spender.receiveApproval(\n        msg.sender,\n        _amount,\n        this,\n        _extraData\n    );\n    return true;\n}",
                            "start": 290
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "createCloneToken(string,uint8,string,uint256,bool) should be declared external:\n\t- MiniMeToken.createCloneToken(string,uint8,string,uint256,bool) (MiniMeToken.sol#376-400)\n",
                            "end": 400,
                            "governanceInfo": null,
                            "id": 156567218,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function createCloneToken(\n    string _cloneTokenName,\n    uint8 _cloneDecimalUnits,\n    string _cloneTokenSymbol,\n    uint _snapshotBlock,\n    bool _transfersEnabled\n) public returns(MiniMeToken)\n    uint256 snapshot = _snapshotBlock == 0 ? block.number - 1 : _snapshotBlock;\n    MiniMeToken cloneToken = tokenFactory.createCloneToken(\n        this,\n        snapshot,\n        _cloneTokenName,\n        _cloneDecimalUnits,\n        _cloneTokenSymbol,\n        _transfersEnabled\n    );\n    cloneToken.changeController(msg.sender);\n    // An event to make the token easy to find on the blockchain\n    NewCloneToken(address(cloneToken), snapshot);\n    return cloneToken;\n}",
                            "start": 376
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "generateTokens(address,uint256) should be declared external:\n\t- MiniMeToken.generateTokens(address,uint256) (MiniMeToken.sol#410-419)\n",
                            "end": 419,
                            "governanceInfo": null,
                            "id": 156567219,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function generateTokens(address _owner, uint _amount) onlyController public returns (bool) {\n    uint curTotalSupply = totalSupply();\n    require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\n    uint previousBalanceTo = balanceOf(_owner);\n    require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\n    updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\n    updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\n    Transfer(0, _owner, _amount);\n    return true;\n}",
                            "start": 410
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "destroyTokens(address,uint256) should be declared external:\n\t- MiniMeToken.destroyTokens(address,uint256) (MiniMeToken.sol#426-435)\n",
                            "end": 435,
                            "governanceInfo": null,
                            "id": 156567220,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function destroyTokens(address _owner, uint _amount) onlyController public returns (bool) {\n    uint curTotalSupply = totalSupply();\n    require(curTotalSupply >= _amount);\n    uint previousBalanceFrom = balanceOf(_owner);\n    require(previousBalanceFrom >= _amount);\n    updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\n    updateValueAtNow(balances[_owner], previousBalanceFrom - _amount);\n    Transfer(_owner, 0, _amount);\n    return true;\n}",
                            "start": 426
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "enableTransfers(bool) should be declared external:\n\t- MiniMeToken.enableTransfers(bool) (MiniMeToken.sol#444-446)\n",
                            "end": 446,
                            "governanceInfo": null,
                            "id": 156567221,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function enableTransfers(bool _transfersEnabled) onlyController public {\n    transfersEnabled = _transfersEnabled;\n}",
                            "start": 444
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "claimTokens(address) should be declared external:\n\t- MiniMeToken.claimTokens(address) (MiniMeToken.sol#532-542)\n",
                            "end": 542,
                            "governanceInfo": null,
                            "id": 156567222,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function claimTokens(address _token) onlyController public {\n    if (_token == 0x0) {\n        controller.transfer(this.balance);\n        return;\n    }\n    MiniMeToken token = MiniMeToken(_token);\n    uint balance = token.balanceOf(this);\n    token.transfer(controller, balance);\n    ClaimedTokens(_token, controller, balance);\n}",
                            "start": 532
                        }
                    ],
                    "scwDescription": "Some functions in this contract should be declared as external in order to save gas.",
                    "scwId": "184",
                    "scwTitle": "Public Functions Should be Declared External"
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable payable functions found",
                    "scwId": "224",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable message values found",
                    "scwId": "225",
                    "scwTitle": null
                }
            ],
            "governance": {
                "contractOwners": [
                    {
                        "governance": null,
                        "impact": "High",
                        "modifiable": true,
                        "multisig": null,
                        "owner": "0xdDB2dfad74F64F14bb1A1cbaB9C03bc0eed74493",
                        "timelock": null,
                        "timelockDelay": null,
                        "type": "5"
                    }
                ],
                "issueOwners": [
                    {
                        "owners": [
                            {
                                "governance": null,
                                "impact": "High",
                                "modifiable": true,
                                "multisig": null,
                                "owner": "0xdDB2dfad74F64F14bb1A1cbaB9C03bc0eed74493",
                                "timelock": null,
                                "timelockDelay": null,
                                "type": "5"
                            }
                        ],
                        "scwId": "189"
                    },
                    {
                        "owners": [
                            {
                                "governance": null,
                                "impact": "High",
                                "modifiable": true,
                                "multisig": null,
                                "owner": "0xdDB2dfad74F64F14bb1A1cbaB9C03bc0eed74493",
                                "timelock": null,
                                "timelockDelay": null,
                                "type": "5"
                            }
                        ],
                        "scwId": "220"
                    }
                ],
                "proxyOwners": [],
                "visibleOwner": "0xdDB2dfad74F64F14bb1A1cbaB9C03bc0eed74493"
            },
            "inProgress": false,
            "initialFunder": "0x872213e29c85d7e30f1c8202fc47ed1ec124bb1d",
            "isProxyImplementation": false,
            "logo": "",
            "name": "MiniMeToken(Badger)",
            "network": 1,
            "pairInfo": null,
            "projectFullName": "Badger (BADGER)",
            "projectName": "Staking",
            "protocol": "erc20",
            "proxyContractAddress": null,
            "proxyData": null,
            "rektLink": null,
            "sourceCodeLink": "https://scan-results.de.fi/0x3472a5a71965499acd81997a54bba8d852c6e53d_1_src.json",
            "stats": {
                "percentage": 100,
                "scammed": false
            },
            "whitelisted": true
        }
    }
}