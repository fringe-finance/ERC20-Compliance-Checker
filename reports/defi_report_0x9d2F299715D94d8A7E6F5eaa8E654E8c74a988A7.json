{
    "data": {
        "project": {
            "address": "0x9d2f299715d94d8a7e6f5eaa8e654e8c74a988a7",
            "contractName": "CrossChainCanonicalFXS",
            "coreIssues": [
                {
                    "issues": [],
                    "scwDescription": "No vulnerable withdrawal functions found",
                    "scwId": "105",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No reentrancy risk found",
                    "scwId": "107",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No locks detected",
                    "scwId": "150",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Verified source code found",
                    "scwId": "185",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [
                                {
                                    "description": "Not Found.",
                                    "title": "Inflation rate"
                                },
                                {
                                    "description": "% of Max Supply Minted: 63%",
                                    "title": "Max supply: 500K"
                                },
                                {
                                    "description": "Not found.",
                                    "title": "Mint Timelock"
                                }
                            ],
                            "data": "{\"max_supply\":{\"type\":\"var\",\"value\":\"mint_cap\"},\"timelock\":\"\",\"privileged\":[{\"type\":\"private\",\"value\":\"private\"}],\"maxSupplyValue\":\"5e+23\",\"percentOfMinted\":63}",
                            "description": "Mint function: CrossChainCanonical.minter_mint(address,uint256) (CrossChainCanonicalFXS.sol#1632-1635)\n\t- in internal call: _mint_capped(m_address,m_amount)\n\t\t- In expression: _balances[account] = _balances[account].add(amount)\n",
                            "end": 1635,
                            "governanceInfo": {
                                "owners": [
                                    {
                                        "owner": "",
                                        "timelockDelay": null,
                                        "type": "7"
                                    }
                                ],
                                "worstOwner": {
                                    "owner": "",
                                    "timelockDelay": null,
                                    "type": "7"
                                }
                            },
                            "id": 155237547,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function minter_mint(address m_address, uint256 m_amount) external onlyMinters {\n    _mint_capped(m_address, m_amount);\n    emit TokenMinted(msg.sender, m_address, m_amount);\n}",
                            "start": 1632
                        }
                    ],
                    "scwDescription": "A large amount of this token can be minted by a private wallet or contract.",
                    "scwId": "186",
                    "scwTitle": "Mintable"
                },
                {
                    "issues": [],
                    "scwDescription": "Users can always transfer their tokens",
                    "scwId": "189",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract cannot be upgraded",
                    "scwId": "193",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Wallets cannot be blacklisted from transfering the token",
                    "scwId": "208",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No transfer fees found",
                    "scwId": "209",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No transfer limits found",
                    "scwId": "211",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No ERC20 approval vulnerability found",
                    "scwId": "216-a",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract owner cannot abuse ERC20 approvals",
                    "scwId": "216-b",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No ERC20 interface errors found",
                    "scwId": "204-a",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No blocking loops found",
                    "scwId": "218",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No centralized balance controls found",
                    "scwId": "220",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No transfer cooldown times found",
                    "scwId": "219",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No approval restrictions found",
                    "scwId": "223",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No external calls detected",
                    "scwId": "210-b",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No airdrop-specific code found",
                    "scwId": "10004",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable ownership functions found.",
                    "scwId": "230",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No retrievable ownership found.",
                    "scwId": "231",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract was not deployed recently.",
                    "scwId": "10010",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No mixers utilized by contract deployer.",
                    "scwId": "10003",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "data": "",
                            "description": "Max supply variable: 'mint_cap' can be changed by function: CrossChainCanonical.setMintCap(uint256) (CrossChainCanonicalFXS.sol#1708-1712)\tin expression: mint_cap = _mint_cap",
                            "end": 1712,
                            "governanceInfo": null,
                            "id": 155237548,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function setMintCap(uint256 _mint_cap) external onlyByOwnGov {\n    mint_cap = _mint_cap;\n    emit MintCapSet(_mint_cap);\n}",
                            "start": 1708
                        }
                    ],
                    "scwDescription": "The token's maximum supply can be adjusted.",
                    "scwId": "233",
                    "scwTitle": "Oversupply Minting"
                },
                {
                    "issues": [],
                    "scwDescription": "No previous scams by owner's wallet found.",
                    "scwId": "10016",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "The contract operates without custom fees, ensuring security and financial integrity.",
                    "scwId": "236",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract lacks a whitelisting feature, reinforcing standard restrictions and access controls, enhancing overall security and integrity.",
                    "scwId": "237",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract's transfer function secure with unchangeable router, no issues, ensuring smooth, secure token transfers.",
                    "scwId": "238",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract safeguarded against native token draining in token transfers/approvals.",
                    "scwId": "239",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract with recent user interactions, active use, and operational functionality, not abandoned.",
                    "scwId": "10022",
                    "scwTitle": "Recent Interaction was within 30 Days."
                },
                {
                    "issues": [],
                    "scwDescription": "No instances of native token drainage upon revoking tokens were detected in the contract.",
                    "scwId": "10023",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Securely hardcoded Uniswap router ensuring protection against router alterations.",
                    "scwId": "241",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "AI model detects robust, genuine token and user activity, earning a high score, indicating trustworthiness and community integrity.",
                    "scwId": "10024",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract with minimal revocations, a positive indicator for stable, secure functionality.",
                    "scwId": "10025",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract's initializer protected, enhancing security and preventing unintended issues.",
                    "scwId": "242",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract intact, not self-destructed, ensuring continuity and functionality.",
                    "scwId": "10026",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract's timelock setting aligns with 24 hours or more, enhancing security and reliability.",
                    "scwId": "10027",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No suspicious activity has been detected.",
                    "scwId": "10028",
                    "scwTitle": null
                }
            ],
            "diffs": null,
            "estimatedAnalyzingTime": 0,
            "firstTxBlock": null,
            "firstTxDate": "2021-09-27T18:21:08.000Z",
            "firstTxFrom": "0x9124b49270a464ddb6f36dc212eee5b1d69d5133",
            "generalIssues": [
                {
                    "issues": [],
                    "scwDescription": "No compiler version inconsistencies found",
                    "scwId": "103",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No unchecked call responses found",
                    "scwId": "104",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable self-destruct functions found",
                    "scwId": "106",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No assertion vulnerabilities found",
                    "scwId": "110",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No old solidity code found",
                    "scwId": "111",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No external delegated calls found",
                    "scwId": "112",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No external call dependency found",
                    "scwId": "113",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable authentication calls found",
                    "scwId": "115",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No invalid character typos found",
                    "scwId": "129",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No RTL characters found",
                    "scwId": "130",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No dead code found",
                    "scwId": "135",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No risky data allocation found",
                    "scwId": "138",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No uninitialized state variables found",
                    "scwId": "142",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No uninitialized storage variables found",
                    "scwId": "143",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable initialization functions found",
                    "scwId": "144",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No risky data handling found",
                    "scwId": "145",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No number accuracy bug found",
                    "scwId": "146",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No out-of-range number vulnerability found",
                    "scwId": "147",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No map data deletion vulnerabilities found",
                    "scwId": "151",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No tautologies or contradictions found",
                    "scwId": "152",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No faulty true/false values found",
                    "scwId": "153",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No innacurate divisions found",
                    "scwId": "156",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No redundant constructor calls found",
                    "scwId": "157",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable transfers found",
                    "scwId": "158",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable return values found",
                    "scwId": "159",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No uninitialized local variables found",
                    "scwId": "160",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No default function responses found",
                    "scwId": "161",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No missing arithmetic events found",
                    "scwId": "167-a",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No missing access control events found",
                    "scwId": "167-b",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "Medium",
                            "description": "Owned.nominateNewOwner(address)._owner (CrossChainCanonicalFXS.sol#1354) lacks a zero-check on :\n\t\t- nominatedOwner = _owner (CrossChainCanonicalFXS.sol#1355)\n",
                            "end": 1354,
                            "governanceInfo": null,
                            "id": 155237549,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function nominateNewOwner(address _owner) external onlyOwner {",
                            "start": 1354
                        }
                    ],
                    "scwDescription": "Some functions in this contract may not appropriately check for zero addresses being used.",
                    "scwId": "168",
                    "scwTitle": "Missing Zero Address Validation"
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "CrossChainCanonical.addMinter(address) (CrossChainCanonicalFXS.sol#1679-1687) compares to a boolean constant:\n\t-require(bool,string)(minters[minter_address] == false,Address already exists) (CrossChainCanonicalFXS.sol#1682)\n",
                            "end": 1687,
                            "governanceInfo": null,
                            "id": 155237536,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function addMinter(address minter_address) external onlyByOwnGov {\n    require(minter_address != address(0), \"Zero address detected\");\n    require(minters[minter_address] == false, \"Address already exists\");\n    minters[minter_address] = true; \n    minters_array.push(minter_address);\n    emit MinterAdded(minter_address);\n}",
                            "start": 1679
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "CrossChainCanonical.removeMinter(address) (CrossChainCanonicalFXS.sol#1690-1706) compares to a boolean constant:\n\t-require(bool,string)(minters[minter_address] == true,Address nonexistant) (CrossChainCanonicalFXS.sol#1692)\n",
                            "end": 1706,
                            "governanceInfo": null,
                            "id": 155237537,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function removeMinter(address minter_address) external onlyByOwnGov {\n    require(minter_address != address(0), \"Zero address detected\");\n    require(minters[minter_address] == true, \"Address nonexistant\");\n    // Delete from the mapping\n    delete minters[minter_address];\n    // 'Delete' from the array by setting the address to 0x0\n    for (uint i = 0; i < minters_array.length; i++){ \n        if (minters_array[i] == minter_address) {\n            minters_array[i] = address(0); // This will leave a null in the array and keep the indices the same\n            break;\n        }\n    }\n    emit MinterRemoved(minter_address);\n}",
                            "start": 1690
                        }
                    ],
                    "scwDescription": "This contract compares boolean constants to true or false, which is unnecessary.",
                    "scwId": "170",
                    "scwTitle": "Boolean Constant Comparison"
                },
                {
                    "issues": [],
                    "scwDescription": "No state variables vulnerable through function calls found",
                    "scwId": "172",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "Low level call in Address.sendValue(address,uint256) (CrossChainCanonicalFXS.sol#321-327):\n\t- (success) = recipient.call{value: amount}() (CrossChainCanonicalFXS.sol#325)\n",
                            "end": 327,
                            "governanceInfo": null,
                            "id": 155237539,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function sendValue(address payable recipient, uint256 amount) internal {\n    require(address(this).balance >= amount, \"Address: insufficient balance\");\n    // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n    (bool success, ) = recipient.call{ value: amount }(\"\");\n    require(success, \"Address: unable to send value, recipient may have reverted\");\n}",
                            "start": 321
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (CrossChainCanonicalFXS.sol#382-389):\n\t- (success,returndata) = target.call{value: value}(data) (CrossChainCanonicalFXS.sol#387)\n",
                            "end": 389,
                            "governanceInfo": null,
                            "id": 155237540,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n    require(address(this).balance >= value, \"Address: insufficient balance for call\");\n    require(isContract(target), \"Address: call to non-contract\");\n    // solhint-disable-next-line avoid-low-level-calls\n    (bool success, bytes memory returndata) = target.call{ value: value }(data);\n    return _verifyCallResult(success, returndata, errorMessage);\n}",
                            "start": 382
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "Low level call in Address.functionStaticCall(address,bytes,string) (CrossChainCanonicalFXS.sol#407-413):\n\t- (success,returndata) = target.staticcall(data) (CrossChainCanonicalFXS.sol#411)\n",
                            "end": 413,
                            "governanceInfo": null,
                            "id": 155237541,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n    require(isContract(target), \"Address: static call to non-contract\");\n    // solhint-disable-next-line avoid-low-level-calls\n    (bool success, bytes memory returndata) = target.staticcall(data);\n    return _verifyCallResult(success, returndata, errorMessage);\n}",
                            "start": 407
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "Low level call in Address.functionDelegateCall(address,bytes,string) (CrossChainCanonicalFXS.sol#431-437):\n\t- (success,returndata) = target.delegatecall(data) (CrossChainCanonicalFXS.sol#435)\n",
                            "end": 437,
                            "governanceInfo": null,
                            "id": 155237542,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n    require(isContract(target), \"Address: delegate call to non-contract\");\n    // solhint-disable-next-line avoid-low-level-calls\n    (bool success, bytes memory returndata) = target.delegatecall(data);\n    return _verifyCallResult(success, returndata, errorMessage);\n}",
                            "start": 431
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "Low level call in TransferHelper.safeApprove(address,address,uint256) (CrossChainCanonicalFXS.sol#1315-1319):\n\t- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (CrossChainCanonicalFXS.sol#1317)\n",
                            "end": 1319,
                            "governanceInfo": null,
                            "id": 155237543,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function safeApprove(address token, address to, uint value) internal {\n    // bytes4(keccak256(bytes('approve(address,uint256)')));\n    (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\n    require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: APPROVE_FAILED');\n}",
                            "start": 1315
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "Low level call in TransferHelper.safeTransfer(address,address,uint256) (CrossChainCanonicalFXS.sol#1321-1325):\n\t- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (CrossChainCanonicalFXS.sol#1323)\n",
                            "end": 1325,
                            "governanceInfo": null,
                            "id": 155237544,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function safeTransfer(address token, address to, uint value) internal {\n    // bytes4(keccak256(bytes('transfer(address,uint256)')));\n    (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\n    require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED');\n}",
                            "start": 1321
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "Low level call in TransferHelper.safeTransferFrom(address,address,address,uint256) (CrossChainCanonicalFXS.sol#1327-1331):\n\t- (success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value)) (CrossChainCanonicalFXS.sol#1329)\n",
                            "end": 1331,
                            "governanceInfo": null,
                            "id": 155237545,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function safeTransferFrom(address token, address from, address to, uint value) internal {\n    // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\n    (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\n    require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED');\n}",
                            "start": 1327
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "Low level call in TransferHelper.safeTransferETH(address,uint256) (CrossChainCanonicalFXS.sol#1333-1336):\n\t- (success) = to.call{value: value}(new bytes(0)) (CrossChainCanonicalFXS.sol#1334)\n",
                            "end": 1336,
                            "governanceInfo": null,
                            "id": 155237546,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function safeTransferETH(address to, uint value) internal {\n    (bool success,) = to.call{value:value}(new bytes(0));\n    require(success, 'TransferHelper: ETH_TRANSFER_FAILED');\n}",
                            "start": 1333
                        }
                    ],
                    "scwDescription": "This contract uses low level calls, which may be unsafe.",
                    "scwId": "173",
                    "scwTitle": "Low Level Calls"
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "Pragma version>=0.8.0 (CrossChainCanonicalFXS.sol#2) allows old versions\n",
                            "end": 2,
                            "governanceInfo": null,
                            "id": 155237538,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "pragma solidity >=0.8.0;",
                            "start": 2
                        }
                    ],
                    "scwDescription": "This contract uses an unconventional or very old version of Solidity.",
                    "scwId": "177",
                    "scwTitle": "Incorrect Solidity Version"
                },
                {
                    "issues": [],
                    "scwDescription": "No expensive loops found",
                    "scwId": "179",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No bad numeric notation practices found",
                    "scwId": "182",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No missing constant declarations found",
                    "scwId": "183",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No missing external function declarations found",
                    "scwId": "184",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable payable functions found",
                    "scwId": "224",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable message values found",
                    "scwId": "225",
                    "scwTitle": null
                }
            ],
            "governance": {
                "contractOwners": [
                    {
                        "governance": null,
                        "impact": "Medium",
                        "modifiable": true,
                        "multisig": {
                            "multisigOwners": [
                                "0xf4E1d185666a624099298FcC42C50ba662DC7e52",
                                "0x6e74053a3798e0fC9a9775F7995316b27f21c4D2",
                                "0xee8787aA507958905edBd99cCDc53F223d4B60b1",
                                "0xc28339c70054bC22255A74E927a0B9e9A475F224",
                                "0x381e2495e683868F693AA5B1414F712f21d34b40"
                            ],
                            "threshold": 3,
                            "transactionCount": 479
                        },
                        "owner": "0xe61d9ed1e5dc261d1e90a99304fadcef2c76fd10",
                        "timelock": null,
                        "timelockDelay": null,
                        "type": "2"
                    }
                ],
                "issueOwners": [
                    {
                        "owners": [
                            {
                                "governance": null,
                                "impact": "High",
                                "modifiable": false,
                                "multisig": null,
                                "owner": "",
                                "timelock": null,
                                "timelockDelay": null,
                                "type": "7"
                            }
                        ],
                        "scwId": "186"
                    }
                ],
                "proxyOwners": [],
                "visibleOwner": "0xe61d9ed1e5dc261d1e90a99304fadcef2c76fd10"
            },
            "inProgress": false,
            "initialFunder": "0x36a87d1e3200225f881488e4aeedf25303febcae",
            "isProxyImplementation": false,
            "logo": "",
            "name": "CrossChainCanonicalFXS(Frax Share)",
            "network": 42161,
            "pairInfo": null,
            "projectFullName": "",
            "projectName": "",
            "protocol": "erc20",
            "proxyContractAddress": null,
            "proxyData": null,
            "rektLink": null,
            "sourceCodeLink": "https://scan-results.de.fi/0x9d2f299715d94d8a7e6f5eaa8e654e8c74a988a7_42161_src.json",
            "stats": {
                "percentage": 100,
                "scammed": false
            },
            "whitelisted": true
        }
    }
}