{
    "data": {
        "project": {
            "address": "0xfaba6f8e4a5e8ab82f62fe7c39859fa577269be3",
            "contractName": "Ondo",
            "coreIssues": [
                {
                    "issues": [],
                    "scwDescription": "No vulnerable withdrawal functions found",
                    "scwId": "105",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No reentrancy risk found",
                    "scwId": "107",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No locks detected",
                    "scwId": "150",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Verified source code found",
                    "scwId": "185",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [
                                {
                                    "description": "Not found.",
                                    "title": "Mint max supply"
                                },
                                {
                                    "description": "Not found.",
                                    "title": "Mint Timelock"
                                }
                            ],
                            "data": "{\"max_supply\": \"\", \"timelock\": \"\", \"privileged\": [{\"type\": \"role\", \"value\": \"MINTER_ROLE\", \"modifiable\": true}]}",
                            "description": "Mint function: Ondo.mint(address,uint256) (Ondo.sol#833-848)\n\t- In expression: balances[account] = add96(balances[account],amount,Ondo::mint: balance overflow)\n",
                            "end": 848,
                            "governanceInfo": {
                                "owners": [
                                    {
                                        "owner": "0x677FD4Ed8aE623f2f625DEB2D64F2070E46cA1A1",
                                        "timelockDelay": null,
                                        "type": "2"
                                    }
                                ],
                                "worstOwner": {
                                    "owner": "0x677FD4Ed8aE623f2f625DEB2D64F2070E46cA1A1",
                                    "timelockDelay": null,
                                    "type": "2"
                                }
                            },
                            "id": 233575502,
                            "impact": "Informational",
                            "severityChanges": [
                                {
                                    "from": "Critical",
                                    "reason": "OwnerAnalyzer: Multisig",
                                    "to": "High"
                                }
                            ],
                            "snippet": "function mint(address account, uint256 rawAmount) external {\n  require(hasRole(MINTER_ROLE, msg.sender), \"Ondo::mint: not authorized\");\n  require(account != address(0), \"cannot mint to the zero address\");\n  uint96 amount = safe96(rawAmount, \"Ondo::mint: amount exceeds 96 bits\");\n  uint96 supply =\n    safe96(totalSupply, \"Ondo::mint: totalSupply exceeds 96 bits\");\n  totalSupply = add96(supply, amount, \"Ondo::mint: token supply overflow\");\n  balances[account] = add96(\n    balances[account],\n    amount,\n    \"Ondo::mint: balance overflow\"\n  );\n  emit Transfer(address(0), account, amount);\n}",
                            "start": 833
                        }
                    ],
                    "scwDescription": "A large amount of this token can be minted by a private wallet or contract.",
                    "scwId": "186",
                    "scwTitle": "Mintable"
                },
                {
                    "issues": [],
                    "scwDescription": "Users can always transfer their tokens",
                    "scwId": "189",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract cannot be upgraded",
                    "scwId": "193",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Wallets cannot be blacklisted from transfering the token",
                    "scwId": "208",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No transfer fees found",
                    "scwId": "209",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [
                                {
                                    "description": "Not Found.",
                                    "title": "Transfer Amount Limits"
                                }
                            ],
                            "data": "",
                            "description": "Transfer amount limits in: Ondo.transferFrom(address,address,uint256) (Ondo.sol#696-719)\n\t- In expression: srcRep != dstRep && amount > 0 \n\t- In expression: amount <= _getFreedBalance(src) \n",
                            "end": 719,
                            "governanceInfo": null,
                            "id": 233575503,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function transferFrom(\n  address src,\n  address dst,\n  uint256 rawAmount\n) external returns (bool) {\n  address spender = msg.sender;\n  uint96 spenderAllowance = allowances[src][spender];\n  uint96 amount = safe96(rawAmount, \"Ondo::approve: amount exceeds 96 bits\");\n  if (spender != src && spenderAllowance != type(uint96).max) {\n    uint96 newAllowance =\n      sub96(\n        spenderAllowance,\n        amount,\n        \"Ondo::transferFrom: transfer amount exceeds spender allowance\"\n      );\n    allowances[src][spender] = newAllowance;\n    emit Approval(src, spender, newAllowance);\n  }\n  _transferTokens(src, dst, amount);\n  return true;\n}",
                            "start": 696
                        },
                        {
                            "additionalData": [
                                {
                                    "description": "Not Found.",
                                    "title": "Transfer Amount Limits"
                                }
                            ],
                            "data": "",
                            "description": "Transfer amount limits in: Ondo.transfer(address,uint256) (Ondo.sol#683-687)\n\t- In expression: srcRep != dstRep && amount > 0 \n\t- In expression: amount <= _getFreedBalance(src) \n",
                            "end": 687,
                            "governanceInfo": null,
                            "id": 233575504,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function transfer(address dst, uint256 rawAmount) external returns (bool) {\n  uint96 amount = safe96(rawAmount, \"Ondo::transfer: amount exceeds 96 bits\");\n  _transferTokens(msg.sender, dst, amount);\n  return true;\n}",
                            "start": 683
                        }
                    ],
                    "scwDescription": "The max/min amount of token transferred can be limited (max could be set to 0).",
                    "scwId": "211",
                    "scwTitle": "Transfer Limit"
                },
                {
                    "issues": [],
                    "scwDescription": "No ERC20 approval vulnerability found",
                    "scwId": "216-a",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract owner cannot abuse ERC20 approvals",
                    "scwId": "216-b",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No ERC20 interface errors found",
                    "scwId": "204-a",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No blocking loops found",
                    "scwId": "218",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No centralized balance controls found",
                    "scwId": "220",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No transfer cooldown times found",
                    "scwId": "219",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No approval restrictions found",
                    "scwId": "223",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No external calls detected",
                    "scwId": "210-b",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No airdrop-specific code found",
                    "scwId": "10004",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable ownership functions found",
                    "scwId": "230",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No retrievable ownership found",
                    "scwId": "231",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract was not deployed recently",
                    "scwId": "10010",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No mixers utilized by contract deployer",
                    "scwId": "10003",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No adjustable maximum supply found",
                    "scwId": "233",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No previous scams by owner's wallet found",
                    "scwId": "10016",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "The contract operates without custom fees, ensuring security and financial integrity",
                    "scwId": "236",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract lacks a whitelisting feature, reinforcing standard restrictions and access controls, enhancing overall security and integrity",
                    "scwId": "237",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract's transfer function secure with unchangeable router, no issues, ensuring smooth, secure token transfers",
                    "scwId": "238",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract safeguarded against native token draining in token transfers/approvals",
                    "scwId": "239",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract with recent user interactions, active use, and operational functionality, not abandoned",
                    "scwId": "10022",
                    "scwTitle": "Recent Interaction was within 30 Days"
                },
                {
                    "issues": [],
                    "scwDescription": "No instances of native token drainage upon revoking tokens were detected in the contract",
                    "scwId": "10023",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Securely hardcoded Uniswap router ensuring protection against router alterations",
                    "scwId": "241",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract with minimal revocations, a positive indicator for stable, secure functionality",
                    "scwId": "10025",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract's initializer protected, enhancing security and preventing unintended issues",
                    "scwId": "242",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract intact, not self-destructed, ensuring continuity and functionality",
                    "scwId": "10026",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract's timelock setting aligns with 24 hours or more, enhancing security and reliability",
                    "scwId": "10027",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No suspicious activity has been detected",
                    "scwId": "10028",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "This contract maintains a strict adherence to best practices for price feed usage, ensuring data accuracy and consistency",
                    "scwId": "243",
                    "scwTitle": null
                }
            ],
            "diffs": null,
            "estimatedAnalyzingTime": 0,
            "firstTxBlock": null,
            "firstTxDate": "2022-04-28T05:23:32.000Z",
            "firstTxFrom": "0xe2d0f9dcc81267c36a47d9e26adf479501124bbe",
            "generalIssues": [
                {
                    "issues": [],
                    "scwDescription": "No compiler version inconsistencies found",
                    "scwId": "103",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No unchecked call responses found",
                    "scwId": "104",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable self-destruct functions found",
                    "scwId": "106",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No assertion vulnerabilities found",
                    "scwId": "110",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No old solidity code found",
                    "scwId": "111",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No external delegated calls found",
                    "scwId": "112",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No external call dependency found",
                    "scwId": "113",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable authentication calls found",
                    "scwId": "115",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No invalid character typos found",
                    "scwId": "129",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No RTL characters found",
                    "scwId": "130",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No dead code found",
                    "scwId": "135",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No risky data allocation found",
                    "scwId": "138",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No uninitialized state variables found",
                    "scwId": "142",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No uninitialized storage variables found",
                    "scwId": "143",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable initialization functions found",
                    "scwId": "144",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No risky data handling found",
                    "scwId": "145",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No number accuracy bug found",
                    "scwId": "146",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No out-of-range number vulnerability found",
                    "scwId": "147",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No map data deletion vulnerabilities found",
                    "scwId": "151",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No tautologies or contradictions found",
                    "scwId": "152",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No faulty true/false values found",
                    "scwId": "153",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "Medium",
                            "description": "LinearTimelock._proportionAvailable(uint256,uint256,LinearTimelock.InvestorParam) (Ondo.sol#435-460) performs a multiplication on the result of a division:\n\t-vestedAmount = safe96((((investorParam.initialBalance * elapsed) / vestingPeriod) * 2) / 3,Ondo::_proportionAvailable: amount exceeds 96 bits) (Ondo.sol#442-446)\n",
                            "end": 460,
                            "governanceInfo": null,
                            "id": 233575496,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function _proportionAvailable(\n  uint256 elapsed,\n  uint256 vestingPeriod,\n  InvestorParam memory investorParam\n) internal pure returns (uint96) {\n  if (investorParam.investorType == IOndo.InvestorType.SeedTranche) {\n    // Seed/Series A Tranche Balance = proportionAvail*2/3 + x/3, where x = Balance. This allows 1/3 of the series A balance to be unlocked at cliff\n    uint96 vestedAmount =\n      safe96(\n        (((investorParam.initialBalance * elapsed) / vestingPeriod) * 2) / 3,\n        \"Ondo::_proportionAvailable: amount exceeds 96 bits\"\n      );\n    return\n      add96(\n        vestedAmount,\n        investorParam.initialBalance / 3,\n        \"Ondo::_proportionAvailable: overflow\"\n      );\n  } else {\n    return\n      safe96(\n        (investorParam.initialBalance * elapsed) / vestingPeriod,\n        \"Ondo::_proportionAvailable: amount exceeds 96 bits\"\n      );\n  }\n}",
                            "start": 435
                        }
                    ],
                    "scwDescription": "The order of operations used may result in a loss of precision.",
                    "scwId": "156",
                    "scwTitle": "Division Before Multiplication"
                },
                {
                    "issues": [],
                    "scwDescription": "No redundant constructor calls found",
                    "scwId": "157",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable transfers found",
                    "scwId": "158",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable return values found",
                    "scwId": "159",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No uninitialized local variables found",
                    "scwId": "160",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No default function responses found",
                    "scwId": "161",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No missing arithmetic events found",
                    "scwId": "167-a",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No missing access control events found",
                    "scwId": "167-b",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No missing zero address checks found",
                    "scwId": "168",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No redundant true/false comparisons found",
                    "scwId": "170",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No state variables vulnerable through function calls found",
                    "scwId": "172",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No buggy low-level calls found",
                    "scwId": "173",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "Pragma version0.8.3 (Ondo.sol#2) allows old versions\n",
                            "end": 2,
                            "governanceInfo": null,
                            "id": 233575500,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "pragma solidity 0.8.3;",
                            "start": 2
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "solc-0.8.3 is not recommended for deployment\n",
                            "end": 0,
                            "governanceInfo": null,
                            "id": 233575501,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "",
                            "start": 0
                        }
                    ],
                    "scwDescription": "This contract uses an unconventional or very old version of Solidity.",
                    "scwId": "177",
                    "scwTitle": "Incorrect Solidity Version"
                },
                {
                    "issues": [],
                    "scwDescription": "No expensive loops found",
                    "scwId": "179",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No bad numeric notation practices found",
                    "scwId": "182",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No missing constant declarations found",
                    "scwId": "183",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "delegate(address) should be declared external:\n\t- Ondo.delegate(address) (Ondo.sol#725-727)\n",
                            "end": 727,
                            "governanceInfo": null,
                            "id": 233575497,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function delegate(address delegatee) public {\n  return _delegate(msg.sender, delegatee);\n}",
                            "start": 725
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32) should be declared external:\n\t- Ondo.delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32) (Ondo.sol#738-767)\n",
                            "end": 767,
                            "governanceInfo": null,
                            "id": 233575498,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function delegateBySig(\n  address delegatee,\n  uint256 nonce,\n  uint256 expiry,\n  uint8 v,\n  bytes32 r,\n  bytes32 s\n) public {\n  bytes32 domainSeparator =\n    keccak256(\n      abi.encode(\n        DOMAIN_TYPEHASH,\n        keccak256(bytes(name)),\n        getChainId(),\n        address(this)\n      )\n    );\n  bytes32 structHash =\n    keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry));\n  bytes32 digest =\n    keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n  address signatory = ecrecover(digest, v, r, s);\n  require(signatory != address(0), \"Ondo::delegateBySig: invalid signature\");\n  require(nonce == nonces[signatory]++, \"Ondo::delegateBySig: invalid nonce\");\n  require(\n    block.timestamp <= expiry,\n    \"Ondo::delegateBySig: signature expired\"\n  );\n  return _delegate(signatory, delegatee);\n}",
                            "start": 738
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "getPriorVotes(address,uint256) should be declared external:\n\t- Ondo.getPriorVotes(address,uint256) (Ondo.sol#786-825)\n",
                            "end": 825,
                            "governanceInfo": null,
                            "id": 233575499,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function getPriorVotes(address account, uint256 blockNumber)\n  public\n  view\n  returns (uint96)\n  require(\n    blockNumber < block.number,\n    \"Ondo::getPriorVotes: not yet determined\"\n  );\n  uint32 nCheckpoints = numCheckpoints[account];\n  if (nCheckpoints == 0) {\n    return 0;\n  }\n  // First check most recent balance\n  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n    return checkpoints[account][nCheckpoints - 1].votes;\n  }\n  // Next check implicit zero balance\n  if (checkpoints[account][0].fromBlock > blockNumber) {\n    return 0;\n  }\n  uint32 lower = 0;\n  uint32 upper = nCheckpoints - 1;\n  while (upper > lower) {\n    uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n    Checkpoint memory cp = checkpoints[account][center];\n    if (cp.fromBlock == blockNumber) {\n      return cp.votes;\n    } else if (cp.fromBlock < blockNumber) {\n      lower = center;\n    } else {\n      upper = center - 1;\n    }\n  }\n  return checkpoints[account][lower].votes;\n}",
                            "start": 786
                        }
                    ],
                    "scwDescription": "Some functions in this contract should be declared as external in order to save gas.",
                    "scwId": "184",
                    "scwTitle": "Public Functions Should be Declared External"
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable payable functions found",
                    "scwId": "224",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable message values found",
                    "scwId": "225",
                    "scwTitle": null
                }
            ],
            "governance": {
                "contractOwners": [
                    {
                        "governance": null,
                        "impact": "Medium",
                        "modifiable": true,
                        "multisig": {
                            "multisigOwners": [
                                "0xF501571FE00EE6F91997d771Cc2816336DDbB480",
                                "0x736D16abCb54eE822e0547757A14D20fbE20be1b",
                                "0x23733B909Eba1BFdEd9512271649cb5ecF4250c2",
                                "0x5D0306662eC4AE089F85Dd4B26cD93948FAc5a57",
                                "0x3dcF2Ac70ed20dAaA7BAC0EC62459C0Cb25F2250",
                                "0x9e4f378C554714b6F45f8d9D8723755569150D06"
                            ],
                            "threshold": 4,
                            "transactionCount": 155
                        },
                        "owner": "0x677fd4ed8ae623f2f625deb2d64f2070e46ca1a1",
                        "timelock": null,
                        "timelockDelay": null,
                        "type": "2"
                    }
                ],
                "issueOwners": [
                    {
                        "owners": [
                            {
                                "governance": null,
                                "impact": "Medium",
                                "modifiable": true,
                                "multisig": {
                                    "multisigOwners": [
                                        "0xF501571FE00EE6F91997d771Cc2816336DDbB480",
                                        "0x736D16abCb54eE822e0547757A14D20fbE20be1b",
                                        "0x23733B909Eba1BFdEd9512271649cb5ecF4250c2",
                                        "0x5D0306662eC4AE089F85Dd4B26cD93948FAc5a57",
                                        "0x3dcF2Ac70ed20dAaA7BAC0EC62459C0Cb25F2250",
                                        "0x9e4f378C554714b6F45f8d9D8723755569150D06"
                                    ],
                                    "threshold": 4,
                                    "transactionCount": 155
                                },
                                "owner": "0x677FD4Ed8aE623f2f625DEB2D64F2070E46cA1A1",
                                "timelock": null,
                                "timelockDelay": null,
                                "type": "2"
                            }
                        ],
                        "scwId": "186"
                    }
                ],
                "proxyOwners": [],
                "visibleOwner": "0x677fd4ed8ae623f2f625deb2d64f2070e46ca1a1"
            },
            "inProgress": false,
            "initialFunder": "0x6f2c5a8b4d9714fb78eeea03e304b4dd586e2834",
            "isProxyImplementation": false,
            "logo": "",
            "name": "Ondo(Ondo)",
            "network": 1,
            "pairInfo": null,
            "projectFullName": "",
            "projectName": "",
            "protocol": "erc20",
            "proxyContractAddress": null,
            "proxyData": null,
            "rektLink": null,
            "sourceCodeLink": "https://scan-results.de.fi/0xfaba6f8e4a5e8ab82f62fe7c39859fa577269be3_1_src.json",
            "stats": {
                "percentage": 100,
                "scammed": false
            },
            "whitelisted": false
        }
    }
}