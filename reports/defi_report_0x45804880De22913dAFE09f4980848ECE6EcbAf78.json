{
    "data": {
        "project": {
            "address": "0x45804880de22913dafe09f4980848ece6ecbaf78",
            "contractName": "AdminUpgradeabilityProxy",
            "coreIssues": [
                {
                    "issues": [],
                    "scwDescription": "No vulnerable withdrawal functions found",
                    "scwId": "105",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No reentrancy risk found",
                    "scwId": "107",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No locks detected",
                    "scwId": "150",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Verified source code found",
                    "scwId": "185",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [
                                {
                                    "description": "Not found.",
                                    "title": "Mint max supply"
                                },
                                {
                                    "description": "Not found.",
                                    "title": "Mint Timelock"
                                }
                            ],
                            "data": "{\"max_supply\": \"\", \"timelock\": \"\", \"privileged\": [{\"type\": \"var\", \"value\": \"supplyController\", \"modifiable\": true}]}",
                            "description": "Mint function: PAXGImplementation.increaseSupply(uint256) (PAXGImplementation.sol#548-554)\n\t- In expression: balances[supplyController] = balances[supplyController].add(_value)\n",
                            "end": 554,
                            "governanceInfo": {
                                "owners": [
                                    {
                                        "owner": "0xE25a329d385f77df5D4eD56265babe2b99A5436e",
                                        "timelockDelay": null,
                                        "type": "5"
                                    }
                                ],
                                "worstOwner": {
                                    "owner": "0xE25a329d385f77df5D4eD56265babe2b99A5436e",
                                    "timelockDelay": null,
                                    "type": "5"
                                }
                            },
                            "id": 156379641,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function increaseSupply(uint256 _value) public onlySupplyController returns (bool success) {\n    totalSupply_ = totalSupply_.add(_value);\n    balances[supplyController] = balances[supplyController].add(_value);\n    emit SupplyIncreased(supplyController, _value);\n    emit Transfer(address(0), supplyController, _value);\n    return true;\n}",
                            "start": 548
                        }
                    ],
                    "scwDescription": "A large amount of this token can be minted by a private wallet or contract.",
                    "scwId": "186",
                    "scwTitle": "Mintable"
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "data": "{\"privileged\": [{\"type\": \"var\", \"value\": \"owner\", \"modifiable\": true}, {\"type\": \"var\", \"value\": \"proposedOwner\", \"modifiable\": true}]}",
                            "description": "Pausable function: PAXGImplementation.approve(address,uint256) (PAXGImplementation.sol#342-347)\n\tIn modifier:whenNotPaused\n\t\t- In expression: require(bool,string)(! paused,whenNotPaused)\n",
                            "end": 347,
                            "governanceInfo": {
                                "owners": [
                                    {
                                        "owner": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
                                        "timelockDelay": null,
                                        "type": "5"
                                    },
                                    {
                                        "owner": "0x0000000000000000000000000000000000000000",
                                        "timelockDelay": null,
                                        "type": "0"
                                    }
                                ],
                                "worstOwner": {
                                    "owner": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
                                    "timelockDelay": null,
                                    "type": "5"
                                }
                            },
                            "id": 156379645,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {\n    require(!frozen[_spender] && !frozen[msg.sender], \"address frozen\");\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n}",
                            "start": 342
                        },
                        {
                            "additionalData": [],
                            "data": "{\"privileged\": [{\"type\": \"var\", \"value\": \"owner\", \"modifiable\": true}, {\"type\": \"var\", \"value\": \"proposedOwner\", \"modifiable\": true}]}",
                            "description": "Pausable function: PAXGImplementation.transfer(address,uint256) (PAXGImplementation.sol#287-294)\n\tIn modifier:whenNotPaused\n\t\t- In expression: require(bool,string)(! paused,whenNotPaused)\n",
                            "end": 294,
                            "governanceInfo": {
                                "owners": [
                                    {
                                        "owner": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
                                        "timelockDelay": null,
                                        "type": "5"
                                    },
                                    {
                                        "owner": "0x0000000000000000000000000000000000000000",
                                        "timelockDelay": null,
                                        "type": "0"
                                    }
                                ],
                                "worstOwner": {
                                    "owner": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
                                    "timelockDelay": null,
                                    "type": "5"
                                }
                            },
                            "id": 156379646,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {\n    require(_to != address(0), \"cannot transfer to address zero\");\n    require(!frozen[_to] && !frozen[msg.sender], \"address frozen\");\n    require(_value <= balances[msg.sender], \"insufficient funds\");\n    _transfer(msg.sender, _to, _value);\n    return true;\n}",
                            "start": 287
                        },
                        {
                            "additionalData": [],
                            "data": "{\"privileged\": [{\"type\": \"var\", \"value\": \"owner\", \"modifiable\": true}, {\"type\": \"var\", \"value\": \"proposedOwner\", \"modifiable\": true}]}",
                            "description": "Pausable function: PAXGImplementation.transferFrom(address,address,uint256) (PAXGImplementation.sol#313-331)\n\tIn modifier:whenNotPaused\n\t\t- In expression: require(bool,string)(! paused,whenNotPaused)\n",
                            "end": 331,
                            "governanceInfo": {
                                "owners": [
                                    {
                                        "owner": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
                                        "timelockDelay": null,
                                        "type": "5"
                                    },
                                    {
                                        "owner": "0x0000000000000000000000000000000000000000",
                                        "timelockDelay": null,
                                        "type": "0"
                                    }
                                ],
                                "worstOwner": {
                                    "owner": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
                                    "timelockDelay": null,
                                    "type": "5"
                                }
                            },
                            "id": 156379647,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function transferFrom(\n    address _from,\n    address _to,\n    uint256 _value\n)\npublic\nwhenNotPaused\nreturns (bool)\n    require(_to != address(0), \"cannot transfer to address zero\");\n    require(!frozen[_to] && !frozen[_from] && !frozen[msg.sender], \"address frozen\");\n    require(_value <= balances[_from], \"insufficient funds\");\n    require(_value <= allowed[_from][msg.sender], \"insufficient allowance\");\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    _transfer(_from, _to, _value);\n    return true;\n}",
                            "start": 313
                        }
                    ],
                    "scwDescription": "Token transfers can be paused, preventing swapping or selling.",
                    "scwId": "189",
                    "scwTitle": "Pausable"
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "data": "{\"privileged\": [{\"type\": \"proxy_admin\", \"value\": \"admin\", \"modifiable\": true}]}",
                            "description": "Proxy upgradeability: AdminUpgradeabilityProxy.upgradeToAndCall(address,bytes) (AdminUpgradeabilityProxy.sol#270-273)\n",
                            "end": 273,
                            "governanceInfo": {
                                "owners": [
                                    {
                                        "owner": "",
                                        "timelockDelay": null,
                                        "type": "7"
                                    }
                                ],
                                "worstOwner": {
                                    "owner": "",
                                    "timelockDelay": null,
                                    "type": "7"
                                }
                            },
                            "id": 131927279,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function upgradeToAndCall(address newImplementation, bytes data) payable external ifAdmin {\n    _upgradeTo(newImplementation);\n    require(address(this).call.value(msg.value)(data));\n}",
                            "start": 270
                        },
                        {
                            "additionalData": [],
                            "data": "{\"privileged\": [{\"type\": \"proxy_admin\", \"value\": \"admin\", \"modifiable\": true}]}",
                            "description": "Proxy upgradeability: AdminUpgradeabilityProxy.upgradeTo(address) (AdminUpgradeabilityProxy.sol#256-258)\n",
                            "end": 258,
                            "governanceInfo": {
                                "owners": [
                                    {
                                        "owner": "",
                                        "timelockDelay": null,
                                        "type": "7"
                                    }
                                ],
                                "worstOwner": {
                                    "owner": "",
                                    "timelockDelay": null,
                                    "type": "7"
                                }
                            },
                            "id": 131927280,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function upgradeTo(address newImplementation) external ifAdmin {\n    _upgradeTo(newImplementation);\n}",
                            "start": 256
                        }
                    ],
                    "scwDescription": "This contract can be upgraded, changing its functionality.",
                    "scwId": "193",
                    "scwTitle": "Proxy Upgradeability"
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "data": "{\"privileged\": [{\"type\": \"var\", \"value\": \"assetProtectionRole\", \"modifiable\": true}]}",
                            "description": "Blacklisted function: PAXGImplementation.transfer(address,uint256) (PAXGImplementation.sol#287-294)\n\t- in expression: require(bool,string)(! frozen[_to] && ! frozen[msg.sender],address frozen)\n",
                            "end": 294,
                            "governanceInfo": {
                                "owners": [
                                    {
                                        "owner": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
                                        "timelockDelay": null,
                                        "type": "5"
                                    }
                                ],
                                "worstOwner": {
                                    "owner": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
                                    "timelockDelay": null,
                                    "type": "5"
                                }
                            },
                            "id": 156379608,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {\n    require(_to != address(0), \"cannot transfer to address zero\");\n    require(!frozen[_to] && !frozen[msg.sender], \"address frozen\");\n    require(_value <= balances[msg.sender], \"insufficient funds\");\n    _transfer(msg.sender, _to, _value);\n    return true;\n}",
                            "start": 287
                        },
                        {
                            "additionalData": [],
                            "data": "{\"privileged\": [{\"type\": \"var\", \"value\": \"assetProtectionRole\", \"modifiable\": true}]}",
                            "description": "Blacklisted function: PAXGImplementation.transferFrom(address,address,uint256) (PAXGImplementation.sol#313-331)\n\t- in expression: require(bool,string)(! frozen[_to] && ! frozen[_from] && ! frozen[msg.sender],address frozen)\n",
                            "end": 331,
                            "governanceInfo": {
                                "owners": [
                                    {
                                        "owner": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
                                        "timelockDelay": null,
                                        "type": "5"
                                    }
                                ],
                                "worstOwner": {
                                    "owner": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
                                    "timelockDelay": null,
                                    "type": "5"
                                }
                            },
                            "id": 156379609,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function transferFrom(\n    address _from,\n    address _to,\n    uint256 _value\n)\npublic\nwhenNotPaused\nreturns (bool)\n    require(_to != address(0), \"cannot transfer to address zero\");\n    require(!frozen[_to] && !frozen[_from] && !frozen[msg.sender], \"address frozen\");\n    require(_value <= balances[_from], \"insufficient funds\");\n    require(_value <= allowed[_from][msg.sender], \"insufficient allowance\");\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    _transfer(_from, _to, _value);\n    return true;\n}",
                            "start": 313
                        },
                        {
                            "additionalData": [],
                            "data": "{\"privileged\": [{\"type\": \"var\", \"value\": \"assetProtectionRole\", \"modifiable\": true}]}",
                            "description": "Blacklisted function: PAXGImplementation.approve(address,uint256) (PAXGImplementation.sol#342-347)\n\t- in expression: require(bool,string)(! frozen[_spender] && ! frozen[msg.sender],address frozen)\n",
                            "end": 347,
                            "governanceInfo": {
                                "owners": [
                                    {
                                        "owner": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
                                        "timelockDelay": null,
                                        "type": "5"
                                    }
                                ],
                                "worstOwner": {
                                    "owner": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
                                    "timelockDelay": null,
                                    "type": "5"
                                }
                            },
                            "id": 156379610,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {\n    require(!frozen[_spender] && !frozen[msg.sender], \"address frozen\");\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n}",
                            "start": 342
                        }
                    ],
                    "scwDescription": "Wallets can be blacklisted from being able to transfer, swap or sell this token.",
                    "scwId": "208",
                    "scwTitle": "Blacklisting"
                },
                {
                    "issues": [
                        {
                            "additionalData": [
                                {
                                    "description": "Not Found.",
                                    "title": "Transfer Fee Limits"
                                },
                                {
                                    "description": "Fee couldn't be defined. Fee is modifiable.",
                                    "title": "Current fee"
                                }
                            ],
                            "data": "{\"transferFee\":\"couldnt be defined\",\"modifiable\":true}",
                            "description": "Transfer Fee: PAXGImplementation.transfer(address,uint256) (PAXGImplementation.sol#287-294)\n\t- in nested function: _transfer\n\t\t- in expression: getFeeFor(_value)\n",
                            "end": 294,
                            "governanceInfo": null,
                            "id": 156379649,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {\n    require(_to != address(0), \"cannot transfer to address zero\");\n    require(!frozen[_to] && !frozen[msg.sender], \"address frozen\");\n    require(_value <= balances[msg.sender], \"insufficient funds\");\n    _transfer(msg.sender, _to, _value);\n    return true;\n}",
                            "start": 287
                        }
                    ],
                    "scwDescription": "A fee is charged upon transfering this token (up to 100%).",
                    "scwId": "209",
                    "scwTitle": "Transfer Fee"
                },
                {
                    "issues": [],
                    "scwDescription": "No transfer limits found",
                    "scwId": "211",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No ERC20 approval vulnerability found",
                    "scwId": "216-a",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract owner cannot abuse ERC20 approvals",
                    "scwId": "216-b",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No ERC20 interface errors found",
                    "scwId": "204-a",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No blocking loops found",
                    "scwId": "218",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "data": "{\"privileged\": [{\"type\": \"var\", \"value\": \"assetProtectionRole\", \"modifiable\": true}]}",
                            "description": "Centralized token balance modification in:PAXGImplementation.wipeFrozenAddress(address) (PAXGImplementation.sol#506-514)\t- in expression:balances[_addr] = 0",
                            "end": 514,
                            "governanceInfo": {
                                "owners": [
                                    {
                                        "owner": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
                                        "timelockDelay": null,
                                        "type": "5"
                                    }
                                ],
                                "worstOwner": {
                                    "owner": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
                                    "timelockDelay": null,
                                    "type": "5"
                                }
                            },
                            "id": 156379644,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function wipeFrozenAddress(address _addr) public onlyAssetProtectionRole {\n    require(frozen[_addr], \"address is not frozen\");\n    uint256 _balance = balances[_addr];\n    balances[_addr] = 0;\n    totalSupply_ = totalSupply_.sub(_balance);\n    emit FrozenAddressWiped(_addr);\n    emit SupplyDecreased(_addr, _balance);\n    emit Transfer(_addr, address(0), _balance);\n}",
                            "start": 506
                        }
                    ],
                    "scwDescription": "The contract owner is able to control all token holders' balances.",
                    "scwId": "220",
                    "scwTitle": "Centralized Balance Controls"
                },
                {
                    "issues": [],
                    "scwDescription": "No transfer cooldown times found",
                    "scwId": "219",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No approval restrictions found",
                    "scwId": "223",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No external calls detected",
                    "scwId": "210-b",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No airdrop-specific code found",
                    "scwId": "10004",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable ownership functions found.",
                    "scwId": "230",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No retrievable ownership found.",
                    "scwId": "231",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract was not deployed recently.",
                    "scwId": "10010",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No mixers utilized by contract deployer.",
                    "scwId": "10003",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No adjustable maximum supply found.",
                    "scwId": "233",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No previous scams by owner's wallet found.",
                    "scwId": "10016",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "The contract operates without custom fees, ensuring security and financial integrity.",
                    "scwId": "236",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract lacks a whitelisting feature, reinforcing standard restrictions and access controls, enhancing overall security and integrity.",
                    "scwId": "237",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract's transfer function secure with unchangeable router, no issues, ensuring smooth, secure token transfers.",
                    "scwId": "238",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract safeguarded against native token draining in token transfers/approvals.",
                    "scwId": "239",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract with recent user interactions, active use, and operational functionality, not abandoned.",
                    "scwId": "10022",
                    "scwTitle": "Recent Interaction was within 30 Days."
                },
                {
                    "issues": [],
                    "scwDescription": "No instances of native token drainage upon revoking tokens were detected in the contract.",
                    "scwId": "10023",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Securely hardcoded Uniswap router ensuring protection against router alterations.",
                    "scwId": "241",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "AI model detects robust, genuine token and user activity, earning a high score, indicating trustworthiness and community integrity.",
                    "scwId": "10024",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract with minimal revocations, a positive indicator for stable, secure functionality.",
                    "scwId": "10025",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract's initializer protected, enhancing security and preventing unintended issues.",
                    "scwId": "242",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Smart contract intact, not self-destructed, ensuring continuity and functionality.",
                    "scwId": "10026",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "Contract's timelock setting aligns with 24 hours or more, enhancing security and reliability.",
                    "scwId": "10027",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No suspicious activity has been detected.",
                    "scwId": "10028",
                    "scwTitle": null
                }
            ],
            "diffs": null,
            "estimatedAnalyzingTime": 0,
            "firstTxBlock": null,
            "firstTxDate": "2019-08-26T14:36:20.000Z",
            "firstTxFrom": "0x36c2e652a6c774f4c48f6d3ae747c17916aeb537",
            "generalIssues": [
                {
                    "issues": [],
                    "scwDescription": "No compiler version inconsistencies found",
                    "scwId": "103",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No unchecked call responses found",
                    "scwId": "104",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable self-destruct functions found",
                    "scwId": "106",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No assertion vulnerabilities found",
                    "scwId": "110",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No old solidity code found",
                    "scwId": "111",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No external delegated calls found",
                    "scwId": "112",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No external call dependency found",
                    "scwId": "113",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable authentication calls found",
                    "scwId": "115",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No invalid character typos found",
                    "scwId": "129",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No RTL characters found",
                    "scwId": "130",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No dead code found",
                    "scwId": "135",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No risky data allocation found",
                    "scwId": "138",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No uninitialized state variables found",
                    "scwId": "142",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No uninitialized storage variables found",
                    "scwId": "143",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable initialization functions found",
                    "scwId": "144",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No risky data handling found",
                    "scwId": "145",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No number accuracy bug found",
                    "scwId": "146",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No out-of-range number vulnerability found",
                    "scwId": "147",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No map data deletion vulnerabilities found",
                    "scwId": "151",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No tautologies or contradictions found",
                    "scwId": "152",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No faulty true/false values found",
                    "scwId": "153",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No innacurate divisions found",
                    "scwId": "156",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No redundant constructor calls found",
                    "scwId": "157",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable transfers found",
                    "scwId": "158",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable return values found",
                    "scwId": "159",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No uninitialized local variables found",
                    "scwId": "160",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No default function responses found",
                    "scwId": "161",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No missing arithmetic events found",
                    "scwId": "167-a",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No missing access control events found",
                    "scwId": "167-b",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "Medium",
                            "description": "PAXGImplementation.setAssetProtectionRole(address)._newAssetProtectionRole (PAXGImplementation.sol#470) lacks a zero-check on :\n\t\t- assetProtectionRole = _newAssetProtectionRole (PAXGImplementation.sol#473)\n",
                            "end": 470,
                            "governanceInfo": null,
                            "id": 156379642,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function setAssetProtectionRole(address _newAssetProtectionRole) public {",
                            "start": 470
                        },
                        {
                            "additionalData": [],
                            "confidence": "Medium",
                            "description": "PAXGImplementation.setBetaDelegateWhitelister(address)._newWhitelister (PAXGImplementation.sol#705) lacks a zero-check on :\n\t\t- betaDelegateWhitelister = _newWhitelister (PAXGImplementation.sol#707)\n",
                            "end": 705,
                            "governanceInfo": null,
                            "id": 156379643,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function setBetaDelegateWhitelister(address _newWhitelister) public {",
                            "start": 705
                        }
                    ],
                    "scwDescription": "Some functions in this contract may not appropriately check for zero addresses being used.",
                    "scwId": "168",
                    "scwTitle": "Missing Zero Address Validation"
                },
                {
                    "issues": [],
                    "scwDescription": "No redundant true/false comparisons found",
                    "scwId": "170",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No state variables vulnerable through function calls found",
                    "scwId": "172",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No buggy low-level calls found",
                    "scwId": "173",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "Pragma version0.4.24 (PAXGImplementation.sol#3) allows old versions\n",
                            "end": 3,
                            "governanceInfo": null,
                            "id": 156379639,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "pragma solidity 0.4.24;",
                            "start": 3
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "solc-0.4.24 is not recommended for deployment\n",
                            "end": 0,
                            "governanceInfo": null,
                            "id": 156379640,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "",
                            "start": 0
                        }
                    ],
                    "scwDescription": "This contract uses an unconventional or very old version of Solidity.",
                    "scwId": "177",
                    "scwTitle": "Incorrect Solidity Version"
                },
                {
                    "issues": [],
                    "scwDescription": "No expensive loops found",
                    "scwId": "179",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "Medium",
                            "description": "Contract PAXGImplementation uses literals with too many digits:\n\t- feeParts = 1000000 (PAXGImplementation.sol#143)\n",
                            "end": 143,
                            "governanceInfo": null,
                            "id": 156379648,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "uint256 public constant feeParts = 1000000;",
                            "start": 143
                        }
                    ],
                    "scwDescription": "The numeric notation used in this contract is unconventional, possibly worsening the reading/debugging experience.",
                    "scwId": "182",
                    "scwTitle": "Numeric Notation Best Practices"
                },
                {
                    "issues": [],
                    "scwDescription": "No missing constant declarations found",
                    "scwId": "183",
                    "scwTitle": null
                },
                {
                    "issues": [
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "totalSupply() should be declared external:\n\t- PAXGImplementation.totalSupply() (PAXGImplementation.sol#276-278)\n",
                            "end": 278,
                            "governanceInfo": null,
                            "id": 156379611,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n}",
                            "start": 276
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "transfer(address,uint256) should be declared external:\n\t- PAXGImplementation.transfer(address,uint256) (PAXGImplementation.sol#287-294)\n",
                            "end": 294,
                            "governanceInfo": null,
                            "id": 156379612,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {\n    require(_to != address(0), \"cannot transfer to address zero\");\n    require(!frozen[_to] && !frozen[msg.sender], \"address frozen\");\n    require(_value <= balances[msg.sender], \"insufficient funds\");\n    _transfer(msg.sender, _to, _value);\n    return true;\n}",
                            "start": 287
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "balanceOf(address) should be declared external:\n\t- PAXGImplementation.balanceOf(address) (PAXGImplementation.sol#301-303)\n",
                            "end": 303,
                            "governanceInfo": null,
                            "id": 156379613,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function balanceOf(address _addr) public view returns (uint256) {\n    return balances[_addr];\n}",
                            "start": 301
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "transferFrom(address,address,uint256) should be declared external:\n\t- PAXGImplementation.transferFrom(address,address,uint256) (PAXGImplementation.sol#313-331)\n",
                            "end": 331,
                            "governanceInfo": null,
                            "id": 156379614,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function transferFrom(\n    address _from,\n    address _to,\n    uint256 _value\n)\npublic\nwhenNotPaused\nreturns (bool)\n    require(_to != address(0), \"cannot transfer to address zero\");\n    require(!frozen[_to] && !frozen[_from] && !frozen[msg.sender], \"address frozen\");\n    require(_value <= balances[_from], \"insufficient funds\");\n    require(_value <= allowed[_from][msg.sender], \"insufficient allowance\");\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    _transfer(_from, _to, _value);\n    return true;\n}",
                            "start": 313
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "approve(address,uint256) should be declared external:\n\t- PAXGImplementation.approve(address,uint256) (PAXGImplementation.sol#342-347)\n",
                            "end": 347,
                            "governanceInfo": null,
                            "id": 156379615,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {\n    require(!frozen[_spender] && !frozen[msg.sender], \"address frozen\");\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n}",
                            "start": 342
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "allowance(address,address) should be declared external:\n\t- PAXGImplementation.allowance(address,address) (PAXGImplementation.sol#355-364)\n",
                            "end": 364,
                            "governanceInfo": null,
                            "id": 156379616,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function allowance(\n    address _owner,\n    address _spender\n)\npublic\nview\nreturns (uint256)\n    return allowed[_owner][_spender];\n}",
                            "start": 355
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "proposeOwner(address) should be declared external:\n\t- PAXGImplementation.proposeOwner(address) (PAXGImplementation.sol#395-400)\n",
                            "end": 400,
                            "governanceInfo": null,
                            "id": 156379617,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function proposeOwner(address _proposedOwner) public onlyOwner {\n    require(_proposedOwner != address(0), \"cannot transfer ownership to address zero\");\n    require(msg.sender != _proposedOwner, \"caller already is owner\");\n    proposedOwner = _proposedOwner;\n    emit OwnershipTransferProposed(owner, proposedOwner);\n}",
                            "start": 395
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "disregardProposeOwner() should be declared external:\n\t- PAXGImplementation.disregardProposeOwner() (PAXGImplementation.sol#405-411)\n",
                            "end": 411,
                            "governanceInfo": null,
                            "id": 156379618,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function disregardProposeOwner() public {\n    require(msg.sender == proposedOwner || msg.sender == owner, \"only proposedOwner or owner\");\n    require(proposedOwner != address(0), \"can only disregard a proposed owner that was previously set\");\n    address _oldProposedOwner = proposedOwner;\n    proposedOwner = address(0);\n    emit OwnershipTransferDisregarded(_oldProposedOwner);\n}",
                            "start": 405
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "claimOwnership() should be declared external:\n\t- PAXGImplementation.claimOwnership() (PAXGImplementation.sol#416-422)\n",
                            "end": 422,
                            "governanceInfo": null,
                            "id": 156379619,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function claimOwnership() public {\n    require(msg.sender == proposedOwner, \"onlyProposedOwner\");\n    address _oldOwner = owner;\n    owner = proposedOwner;\n    proposedOwner = address(0);\n    emit OwnershipTransferred(_oldOwner, owner);\n}",
                            "start": 416
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "unpause() should be declared external:\n\t- PAXGImplementation.unpause() (PAXGImplementation.sol#458-462)\n",
                            "end": 462,
                            "governanceInfo": null,
                            "id": 156379620,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function unpause() public onlyOwner {\n    require(paused, \"already unpaused\");\n    paused = false;\n    emit Unpause();\n}",
                            "start": 458
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "setAssetProtectionRole(address) should be declared external:\n\t- PAXGImplementation.setAssetProtectionRole(address) (PAXGImplementation.sol#470-474)\n",
                            "end": 474,
                            "governanceInfo": null,
                            "id": 156379621,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function setAssetProtectionRole(address _newAssetProtectionRole) public {\n    require(msg.sender == assetProtectionRole || msg.sender == owner, \"only assetProtectionRole or Owner\");\n    emit AssetProtectionRoleSet(assetProtectionRole, _newAssetProtectionRole);\n    assetProtectionRole = _newAssetProtectionRole;\n}",
                            "start": 470
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "freeze(address) should be declared external:\n\t- PAXGImplementation.freeze(address) (PAXGImplementation.sol#485-489)\n",
                            "end": 489,
                            "governanceInfo": null,
                            "id": 156379622,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function freeze(address _addr) public onlyAssetProtectionRole {\n    require(!frozen[_addr], \"address already frozen\");\n    frozen[_addr] = true;\n    emit AddressFrozen(_addr);\n}",
                            "start": 485
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "unfreeze(address) should be declared external:\n\t- PAXGImplementation.unfreeze(address) (PAXGImplementation.sol#495-499)\n",
                            "end": 499,
                            "governanceInfo": null,
                            "id": 156379623,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function unfreeze(address _addr) public onlyAssetProtectionRole {\n    require(frozen[_addr], \"address already unfrozen\");\n    frozen[_addr] = false;\n    emit AddressUnfrozen(_addr);\n}",
                            "start": 495
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "wipeFrozenAddress(address) should be declared external:\n\t- PAXGImplementation.wipeFrozenAddress(address) (PAXGImplementation.sol#506-514)\n",
                            "end": 514,
                            "governanceInfo": null,
                            "id": 156379624,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function wipeFrozenAddress(address _addr) public onlyAssetProtectionRole {\n    require(frozen[_addr], \"address is not frozen\");\n    uint256 _balance = balances[_addr];\n    balances[_addr] = 0;\n    totalSupply_ = totalSupply_.sub(_balance);\n    emit FrozenAddressWiped(_addr);\n    emit SupplyDecreased(_addr, _balance);\n    emit Transfer(_addr, address(0), _balance);\n}",
                            "start": 506
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "isFrozen(address) should be declared external:\n\t- PAXGImplementation.isFrozen(address) (PAXGImplementation.sol#521-523)\n",
                            "end": 523,
                            "governanceInfo": null,
                            "id": 156379625,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function isFrozen(address _addr) public view returns (bool) {\n    return frozen[_addr];\n}",
                            "start": 521
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "setSupplyController(address) should be declared external:\n\t- PAXGImplementation.setSupplyController(address) (PAXGImplementation.sol#531-536)\n",
                            "end": 536,
                            "governanceInfo": null,
                            "id": 156379626,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function setSupplyController(address _newSupplyController) public {\n    require(msg.sender == supplyController || msg.sender == owner, \"only SupplyController or Owner\");\n    require(_newSupplyController != address(0), \"cannot set supply controller to address zero\");\n    emit SupplyControllerSet(supplyController, _newSupplyController);\n    supplyController = _newSupplyController;\n}",
                            "start": 531
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "increaseSupply(uint256) should be declared external:\n\t- PAXGImplementation.increaseSupply(uint256) (PAXGImplementation.sol#548-554)\n",
                            "end": 554,
                            "governanceInfo": null,
                            "id": 156379627,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function increaseSupply(uint256 _value) public onlySupplyController returns (bool success) {\n    totalSupply_ = totalSupply_.add(_value);\n    balances[supplyController] = balances[supplyController].add(_value);\n    emit SupplyIncreased(supplyController, _value);\n    emit Transfer(address(0), supplyController, _value);\n    return true;\n}",
                            "start": 548
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "decreaseSupply(uint256) should be declared external:\n\t- PAXGImplementation.decreaseSupply(uint256) (PAXGImplementation.sol#561-568)\n",
                            "end": 568,
                            "governanceInfo": null,
                            "id": 156379628,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function decreaseSupply(uint256 _value) public onlySupplyController returns (bool success) {\n    require(_value <= balances[supplyController], \"not enough supply\");\n    balances[supplyController] = balances[supplyController].sub(_value);\n    totalSupply_ = totalSupply_.sub(_value);\n    emit SupplyDecreased(supplyController, _value);\n    emit Transfer(supplyController, address(0), _value);\n    return true;\n}",
                            "start": 561
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "nextSeqOf(address) should be declared external:\n\t- PAXGImplementation.nextSeqOf(address) (PAXGImplementation.sol#580-582)\n",
                            "end": 582,
                            "governanceInfo": null,
                            "id": 156379629,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function nextSeqOf(address target) public view returns (uint256) {\n    return nextSeqs[target];\n}",
                            "start": 580
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "betaDelegatedTransfer(bytes,address,uint256,uint256,uint256,uint256) should be declared external:\n\t- PAXGImplementation.betaDelegatedTransfer(bytes,address,uint256,uint256,uint256,uint256) (PAXGImplementation.sol#595-609)\n",
                            "end": 609,
                            "governanceInfo": null,
                            "id": 156379630,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function betaDelegatedTransfer(\n    bytes sig, address to, uint256 value, uint256 serviceFee, uint256 seq, uint256 deadline\n) public returns (bool) {\n    require(sig.length == 65, \"signature should have length 65\");\n    bytes32 r;\n    bytes32 s;\n    uint8 v;\n    assembly {\n        r := mload(add(sig, 32))\n        s := mload(add(sig, 64))\n        v := byte(0, mload(add(sig, 96)))\n    }\n    require(_betaDelegatedTransfer(r, s, v, to, value, serviceFee, seq, deadline), \"failed transfer\");\n    return true;\n}",
                            "start": 595
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "betaDelegatedTransferBatch(bytes32[],bytes32[],uint8[],address[],uint256[],uint256[],uint256[],uint256[]) should be declared external:\n\t- PAXGImplementation.betaDelegatedTransferBatch(bytes32[],bytes32[],uint8[],address[],uint256[],uint256[],uint256[],uint256[]) (PAXGImplementation.sol#677-690)\n",
                            "end": 690,
                            "governanceInfo": null,
                            "id": 156379631,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function betaDelegatedTransferBatch(\n    bytes32[] r, bytes32[] s, uint8[] v, address[] to, uint256[] value, uint256[] serviceFee, uint256[] seq, uint256[] deadline\n) public returns (bool) {\n    require(r.length == s.length && r.length == v.length && r.length == to.length && r.length == value.length, \"length mismatch\");\n    require(r.length == serviceFee.length && r.length == seq.length && r.length == deadline.length, \"length mismatch\");\n    for (uint i = 0; i < r.length; i++) {\n        require(\n            _betaDelegatedTransfer(r[i], s[i], v[i], to[i], value[i], serviceFee[i], seq[i], deadline[i]),\n            \"failed transfer\"\n        );\n    }\n    return true;\n}",
                            "start": 677
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "isWhitelistedBetaDelegate(address) should be declared external:\n\t- PAXGImplementation.isWhitelistedBetaDelegate(address) (PAXGImplementation.sol#697-699)\n",
                            "end": 699,
                            "governanceInfo": null,
                            "id": 156379632,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function isWhitelistedBetaDelegate(address _addr) public view returns (bool) {\n    return betaDelegateWhitelist[_addr];\n}",
                            "start": 697
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "setBetaDelegateWhitelister(address) should be declared external:\n\t- PAXGImplementation.setBetaDelegateWhitelister(address) (PAXGImplementation.sol#705-709)\n",
                            "end": 709,
                            "governanceInfo": null,
                            "id": 156379633,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function setBetaDelegateWhitelister(address _newWhitelister) public {\n    require(msg.sender == betaDelegateWhitelister || msg.sender == owner, \"only Whitelister or Owner\");\n    betaDelegateWhitelister = _newWhitelister;\n    emit BetaDelegateWhitelisterSet(betaDelegateWhitelister, _newWhitelister);\n}",
                            "start": 705
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "whitelistBetaDelegate(address) should be declared external:\n\t- PAXGImplementation.whitelistBetaDelegate(address) (PAXGImplementation.sol#720-724)\n",
                            "end": 724,
                            "governanceInfo": null,
                            "id": 156379634,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function whitelistBetaDelegate(address _addr) public onlyBetaDelegateWhitelister {\n    require(!betaDelegateWhitelist[_addr], \"delegate already whitelisted\");\n    betaDelegateWhitelist[_addr] = true;\n    emit BetaDelegateWhitelisted(_addr);\n}",
                            "start": 720
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "unwhitelistBetaDelegate(address) should be declared external:\n\t- PAXGImplementation.unwhitelistBetaDelegate(address) (PAXGImplementation.sol#730-734)\n",
                            "end": 734,
                            "governanceInfo": null,
                            "id": 156379635,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function unwhitelistBetaDelegate(address _addr) public onlyBetaDelegateWhitelister {\n    require(betaDelegateWhitelist[_addr], \"delegate not whitelisted\");\n    betaDelegateWhitelist[_addr] = false;\n    emit BetaDelegateUnwhitelisted(_addr);\n}",
                            "start": 730
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "setFeeController(address) should be declared external:\n\t- PAXGImplementation.setFeeController(address) (PAXGImplementation.sol#742-748)\n",
                            "end": 748,
                            "governanceInfo": null,
                            "id": 156379636,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function setFeeController(address _newFeeController) public {\n    require(msg.sender == feeController || msg.sender == owner, \"only FeeController or Owner\");\n    require(_newFeeController != address(0), \"cannot set fee controller to address zero\");\n    address _oldFeeController = feeController;\n    feeController = _newFeeController;\n    emit FeeControllerSet(_oldFeeController, feeController);\n}",
                            "start": 742
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "setFeeRecipient(address) should be declared external:\n\t- PAXGImplementation.setFeeRecipient(address) (PAXGImplementation.sol#759-764)\n",
                            "end": 764,
                            "governanceInfo": null,
                            "id": 156379637,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function setFeeRecipient(address _newFeeRecipient) public onlyFeeController {\n    require(_newFeeRecipient != address(0), \"cannot set fee recipient to address zero\");\n    address _oldFeeRecipient = feeRecipient;\n    feeRecipient = _newFeeRecipient;\n    emit FeeRecipientSet(_oldFeeRecipient, feeRecipient);\n}",
                            "start": 759
                        },
                        {
                            "additionalData": [],
                            "confidence": "High",
                            "description": "setFeeRate(uint256) should be declared external:\n\t- PAXGImplementation.setFeeRate(uint256) (PAXGImplementation.sol#770-775)\n",
                            "end": 775,
                            "governanceInfo": null,
                            "id": 156379638,
                            "impact": "Informational",
                            "severityChanges": [],
                            "snippet": "function setFeeRate(uint256 _newFeeRate) public onlyFeeController {\n    require(_newFeeRate <= feeParts, \"cannot set fee rate above 100%\");\n    uint256 _oldFeeRate = feeRate;\n    feeRate = _newFeeRate;\n    emit FeeRateSet(_oldFeeRate, feeRate);\n}",
                            "start": 770
                        }
                    ],
                    "scwDescription": "Some functions in this contract should be declared as external in order to save gas.",
                    "scwId": "184",
                    "scwTitle": "Public Functions Should be Declared External"
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable payable functions found",
                    "scwId": "224",
                    "scwTitle": null
                },
                {
                    "issues": [],
                    "scwDescription": "No vulnerable message values found",
                    "scwId": "225",
                    "scwTitle": null
                }
            ],
            "governance": {
                "contractOwners": [
                    {
                        "governance": null,
                        "impact": "High",
                        "modifiable": true,
                        "multisig": null,
                        "owner": "0x0644bd0248d5f89e4f6e845a91d15c23591e5d33",
                        "timelock": null,
                        "timelockDelay": null,
                        "type": "5"
                    }
                ],
                "issueOwners": [
                    {
                        "owners": [
                            {
                                "governance": null,
                                "impact": "High",
                                "modifiable": true,
                                "multisig": null,
                                "owner": "0xE25a329d385f77df5D4eD56265babe2b99A5436e",
                                "timelock": null,
                                "timelockDelay": null,
                                "type": "5"
                            }
                        ],
                        "scwId": "186"
                    },
                    {
                        "owners": [
                            {
                                "governance": null,
                                "impact": "High",
                                "modifiable": true,
                                "multisig": null,
                                "owner": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
                                "timelock": null,
                                "timelockDelay": null,
                                "type": "5"
                            },
                            {
                                "governance": null,
                                "impact": "Informational",
                                "modifiable": true,
                                "multisig": null,
                                "owner": "0x0000000000000000000000000000000000000000",
                                "timelock": null,
                                "timelockDelay": null,
                                "type": "0"
                            }
                        ],
                        "scwId": "189"
                    },
                    {
                        "owners": [
                            {
                                "governance": null,
                                "impact": "High",
                                "modifiable": true,
                                "multisig": null,
                                "owner": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
                                "timelock": null,
                                "timelockDelay": null,
                                "type": "5"
                            }
                        ],
                        "scwId": "208"
                    },
                    {
                        "owners": [
                            {
                                "governance": null,
                                "impact": "High",
                                "modifiable": true,
                                "multisig": null,
                                "owner": "0x0644Bd0248d5F89e4F6E845a91D15c23591e5D33",
                                "timelock": null,
                                "timelockDelay": null,
                                "type": "5"
                            }
                        ],
                        "scwId": "220"
                    }
                ],
                "proxyOwners": [
                    {
                        "governance": null,
                        "impact": "High",
                        "modifiable": false,
                        "multisig": null,
                        "owner": "",
                        "timelock": null,
                        "timelockDelay": null,
                        "type": "7"
                    }
                ],
                "visibleOwner": "0x0644bd0248d5f89e4f6e845a91d15c23591e5d33"
            },
            "inProgress": false,
            "initialFunder": "0x8c21afaa0e90db969adfdfdbc370bc5474266387",
            "isProxyImplementation": false,
            "logo": "",
            "name": "AdminUpgradeabilityProxy",
            "network": 1,
            "pairInfo": null,
            "projectFullName": "Paxos Gold (PAXG)",
            "projectName": "Gold",
            "protocol": "erc20",
            "proxyContractAddress": null,
            "proxyData": {
                "implementationData": {
                    "firstTxBlock": null,
                    "firstTxDate": "2019-08-26T14:18:47.000Z",
                    "firstTxFrom": "0x36c2e652a6c774f4c48f6d3ae747c17916aeb537",
                    "initialFunder": "0x8c21afaa0e90db969adfdfdbc370bc5474266387",
                    "initialFunding": 0.043,
                    "name": "PAXGImplementation"
                },
                "proxyIssues": [
                    {
                        "issues": [],
                        "scwDescription": "No reentrancy risk found",
                        "scwId": "107",
                        "scwTitle": null
                    },
                    {
                        "issues": [],
                        "scwDescription": "No locks detected",
                        "scwId": "150",
                        "scwTitle": null
                    },
                    {
                        "issues": [],
                        "scwDescription": "Verified source code found",
                        "scwId": "185",
                        "scwTitle": null
                    },
                    {
                        "issues": [],
                        "scwDescription": "Users can always transfer their tokens",
                        "scwId": "189",
                        "scwTitle": null
                    },
                    {
                        "issues": [],
                        "scwDescription": "Wallets cannot be blacklisted from transfering the token",
                        "scwId": "208",
                        "scwTitle": null
                    },
                    {
                        "issues": [
                            {
                                "additionalData": [],
                                "description": "Function with call data bytes: AdminUpgradeabilityProxy.upgradeToAndCall(address,bytes) (AdminUpgradeabilityProxy.sol#270-273)\n\t- in expression: address(this).call.value(msg.value)(data)\n",
                                "end": 273,
                                "governanceInfo": {
                                    "owners": [
                                        {
                                            "owner": "",
                                            "timelockDelay": null,
                                            "type": "7"
                                        }
                                    ],
                                    "worstOwner": {
                                        "owner": "",
                                        "timelockDelay": null,
                                        "type": "7"
                                    }
                                },
                                "id": 131927275,
                                "impact": "Informational",
                                "severityChanges": [
                                    {
                                        "from": "High",
                                        "reason": "OwnerAnalyzer: NotFound",
                                        "to": "Critical"
                                    }
                                ],
                                "snippet": "function upgradeToAndCall(address newImplementation, bytes data) payable external ifAdmin {\n    _upgradeTo(newImplementation);\n    require(address(this).call.value(msg.value)(data));\n}",
                                "start": 270
                            }
                        ],
                        "scwDescription": "Funds in this contract may be vulnerable to being drained by its owner through an approval exploit.",
                        "scwId": "216-a",
                        "scwTitle": "Token Drain Vulnerability"
                    },
                    {
                        "issues": [],
                        "scwDescription": "Contract owner cannot abuse ERC20 approvals",
                        "scwId": "216-b",
                        "scwTitle": null
                    }
                ],
                "proxyOwner": "0x0644bd0248d5f89e4f6e845a91d15c23591e5d33",
                "sourceCodeLink": "https://scan-results.de.fi/0x45804880de22913dafe09f4980848ece6ecbaf78_1_src.json"
            },
            "rektLink": null,
            "sourceCodeLink": "https://scan-results.de.fi/0x74271f2282ed7ee35c166122a60c9830354be42a_1_src.json",
            "stats": {
                "percentage": 100,
                "scammed": false
            },
            "whitelisted": true
        }
    }
}