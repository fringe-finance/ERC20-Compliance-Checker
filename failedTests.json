{
    "arbitrum": {
        "0x0c880f6761F1af8d9Aa9C466984b80DAb9a8c9e8": {
            "issues": {},
            "name": " | StandardArbERC20"
        },
        "0x13Ad51ed4F1B7e9Dc168d8a00cB3f4dDD85EfA60": {
            "issues": {},
            "name": " | StandardArbERC20"
        },
        "0x18c11FD286C5EC11c3b683Caa813B77f5163A122": {
            "issues": {},
            "name": " | GainsNetworkToken(Gains Network)"
        },
        "0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f": {
            "issues": {},
            "name": " | StandardArbERC20"
        },
        "0x3082CC23568eA640225c2467653dB90e9250AaA0": {
            "issues": {},
            "name": " | RadiantOFT(Radiant)"
        },
        "0x3d9907F9a368ad0a51Be60f7Da3b97cf940982D8": {
            "issues": {},
            "name": " | GrailTokenV2(Camelot token)"
        },
        "0x561877b6b3DD7651313794e5F2894B2F18bE0766": {
            "issues": {},
            "name": " | StandardArbERC20"
        },
        "0x5979D7b546E38E414F7E9822514be443A4800529": {
            "issues": {},
            "name": " | ERC20Bridged"
        },
        "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1": {
            "issues": {},
            "name": " | aeWETH"
        },
        "0x912CE59144191C1204E64559FE8253a0e49E6548": {
            "issues": {
                "tokenVuln": [
                    "de.fi | The contract's owner can be changed by anyone.",
                    "de.fi | Unprotected contract initializer, vulnerable to re-execution, immediate action needed for security."
                ]
            },
            "name": " | L2ArbitrumToken"
        },
        "0x93b346b6BC2548dA6A1E7d98E9a421B42541425b": {
            "issues": {},
            "name": " | StandardArbERC20"
        },
        "0x9d2F299715D94d8A7E6F5eaa8E654E8c74a988A7": {
            "issues": {},
            "name": " | CrossChainCanonicalFXS(Frax Share)"
        },
        "0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1": {
            "issues": {},
            "name": " | Dai(Dai Stablecoin)"
        },
        "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8": {
            "issues": {
                "adminSeizure": [
                    "de.fi | Token transfers can be paused, preventing swapping or selling.",
                    "de.fi | Wallets can be blacklisted from being able to transfer, swap or sell this token."
                ],
                "tokenVuln": [
                    "de.fi | The contract's owner can be changed by anyone.",
                    "de.fi | Unprotected contract initializer, vulnerable to re-execution, immediate action needed for security."
                ]
            },
            "name": " | ArbFiatToken"
        },
        "0xFa7F8980b0f1E64A2062791cc3b0871572f1F7f0": {
            "issues": {},
            "name": " | StandardArbERC20"
        },
        "0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9": {
            "issues": {
                "adminSeizure": [
                    "de.fi | Wallets can be blacklisted from being able to transfer, swap or sell this token.",
                    "de.fi | Detected whitelisting feature enables unique users to bypass restrictions, potentially raising security and integrity concerns."
                ]
            },
            "name": " | ArbitrumExtension"
        },
        "0xd4d42F0b6DEF4CE0383636770eF773390d85c61A": {
            "issues": {},
            "name": " | StandardArbERC20"
        },
        "0xe4DDDfe67E7164b0FE14E218d80dC4C08eDC01cB": {
            "issues": {},
            "name": " | StandardArbERC20"
        },
        "0xf97f4df75117a78c1A5a0DBb814Af92458539FB4": {
            "issues": {},
            "name": " | StandardArbERC20"
        },
        "0xfc5A1A6EB076a2C7aD06eD22C90d7E710E35ad0a": {
            "issues": {
                "adminSeizure": [
                    "de.fi | Detected whitelisting feature enables unique users to bypass restrictions, potentially raising security and integrity concerns."
                ]
            },
            "name": " | GMX(GMX)"
        }
    },
    "ethereum": {
        "0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e": {
            "issues": {},
            "name": " | Ygov.finance: YFI Token | YFI(yearn.finance)"
        },
        "0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984": {
            "issues": {
                "allowanceBugs": [
                    "ercx | Multiple `transferFrom` calls of positive amounts are NOT ALLOWED even though the sum of the transferred amounts is  less than or equal to the tokenSender's balance and approvals are given by the tokenSender."
                ],
                "balanceVariability": [
                    "ercx | The `transfer` function TAKES fees at test execution time.",
                    "ercx | The `transfer` function HAS the potential to take fees.",
                    "ercx | The `transfer` function TAKES fees at test execution time."
                ],
                "theftOrInflation": [
                    "ercx | Multiple calls of `transferFrom` ARE allowed even though the allowance has reached zero."
                ],
                "viewInaccuracies": [
                    "ercx | A successful `balanceOf(account)` call does NOT return balance of `account` correctly after two dummy users' balances are initialized."
                ]
            },
            "name": " | Uniswap (UNI) | Uni(Uniswap)"
        },
        "0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599": {
            "issues": {
                "adminSeizure": [
                    "de.fi | Token transfers can be paused, preventing swapping or selling."
                ]
            },
            "name": " | Wrapped BTC (WBTC) | WBTC(Wrapped BTC)"
        },
        "0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0": {
            "issues": {
                "allowanceBugs": [
                    "ercx | Multiple `transfer` calls of positive amounts are NOT ALLOWED even though the sum of the transferred amounts is less than or equal to the tokenSender's balance.",
                    "ercx | Multiple `transferFrom` calls of positive amounts are NOT ALLOWED even though the sum of the transferred amounts is  less than or equal to the tokenSender's balance and approvals are given by the tokenSender.",
                    "ercx | A tokenReceiver CANNOT call `transferFrom` of the tokenSender's total balance amount even though tokenSender has approved that."
                ],
                "balanceVariability": [
                    "ercx | The `transferFrom` function HAS the potential to take fees.",
                    "ercx | The `transfer` function TAKES fees at test execution time.",
                    "ercx | The `transfer` function HAS the potential to take fees.",
                    "ercx | The `transfer` function TAKES fees at test execution time.",
                    "ercx | A `msg.sender` CANNOT call `transfer` of her total balance amount to a tokenReceiver or the balances were not modified as expected.",
                    "ercx | The contract's `totalSupply` variable IS altered after `transfer` is called.",
                    "ercx | The contract's `totalSupply` variable IS altered after `transferFrom` is called.",
                    "ercx | A successful call of `transfer` UPDATES the balance of users who are neither the tokenSender nor the tokenReceiver.",
                    "ercx | A successful call of `transferFrom` UPDATES the balance of users who are neither the tokenSender nor the tokenReceiver."
                ],
                "theftOrInflation": [
                    "ercx | Multiple calls of `transferFrom` ARE allowed even though the allowance has reached zero."
                ]
            },
            "name": " | Frax Share (FXS) | FRAXShares(Frax Share)"
        },
        "0x3472A5A71965499acd81997a54BBA8D852C6E53d": {
            "issues": {
                "adminSeizure": [
                    "de.fi | Token transfers can be paused, preventing swapping or selling.",
                    "de.fi | The contract owner is able to control all token holders' balances."
                ]
            },
            "name": " | Badger (BADGER) | MiniMeToken(Badger)"
        },
        "0x3845badAde8e6dFF049820680d1F14bD3903a5d0": {
            "issues": {},
            "name": " | SAND (SAND) | Sand(SAND)"
        },
        "0x45804880De22913dAFE09f4980848ECE6EcbAf78": {
            "issues": {
                "adminSeizure": [
                    "de.fi | Token transfers can be paused, preventing swapping or selling.",
                    "de.fi | Wallets can be blacklisted from being able to transfer, swap or sell this token.",
                    "de.fi | The contract owner is able to control all token holders' balances."
                ],
                "allowanceBugs": [
                    "ercx | A tokenReceiver CANNOT call `transferFrom` of the tokenSender's total balance amount even though tokenSender has approved that."
                ],
                "balanceVariability": [
                    "ercx | The `transferFrom` function HAS the potential to take fees.",
                    "ercx | The `transfer` function TAKES fees at test execution time.",
                    "ercx | The `transfer` function HAS the potential to take fees.",
                    "ercx | The `transfer` function TAKES fees at test execution time.",
                    "ercx | Self `transfer` call of positive amount is NOT ALLOWED or it MODIFIED the balance.",
                    "ercx | A `msg.sender` CANNOT call `transfer` of her total balance amount to a tokenReceiver or the balances were not modified as expected."
                ]
            },
            "name": " | Paxos Gold (PAXG) | PAXGImplementation"
        },
        "0x4691937a7508860F876c9c0a2a617E7d9E945D4B": {
            "issues": {},
            "name": " | 0 Ether | WootradeNetwork(Wootrade Network)"
        },
        "0x4d224452801ACEd8B2F0aebE155379bb5D594381": {
            "issues": {},
            "name": " | ApeCoin (APE) | SimpleToken(ApeCoin)"
        },
        "0x50327c6c5a14DCaDE707ABad2E27eB517df87AB5": {
            "issues": {},
            "name": " | TRON (TRX) | TRX(TRON)"
        },
        "0x514910771AF9Ca656af840dff83E8264EcF986CA": {
            "issues": {},
            "name": " | ChainLink Token (LINK) | LinkToken(ChainLink Token)"
        },
        "0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32": {
            "issues": {
                "adminSeizure": [
                    "de.fi | Token transfers can be paused, preventing swapping or selling.",
                    "de.fi | The contract owner is able to control all token holders' balances."
                ],
                "allowanceBugs": [
                    "ercx | Multiple `transfer` calls of positive amounts are NOT ALLOWED even though the sum of the transferred amounts is less than or equal to the tokenSender's balance.",
                    "ercx | Multiple `transferFrom` calls of positive amounts are NOT ALLOWED even though the sum of the transferred amounts is  less than or equal to the tokenSender's balance and approvals are given by the tokenSender.",
                    "ercx | A tokenReceiver CANNOT call `transferFrom` of the tokenSender's total balance amount even though tokenSender has approved that.",
                    "ercx | A tokenReceiver CANNOT call `transferFrom` of the tokenSender's total balance amount of zero."
                ],
                "balanceVariability": [
                    "ercx | The `transferFrom` function HAS the potential to take fees.",
                    "ercx | The `transfer` function TAKES fees at test execution time.",
                    "ercx | The `transfer` function HAS the potential to take fees.",
                    "ercx | The `transfer` function TAKES fees at test execution time.",
                    "ercx | Self `transfer` call of positive amount is NOT ALLOWED or it MODIFIED the balance.",
                    "ercx | A `msg.sender` CANNOT call `transfer` of her total balance amount to a tokenReceiver or the balances were not modified as expected.",
                    "ercx | The contract's `totalSupply` variable IS altered after `transfer` is called.",
                    "ercx | The contract's `totalSupply` variable IS altered after `transferFrom` is called.",
                    "ercx | A successful call of `transfer` UPDATES the balance of users who are neither the tokenSender nor the tokenReceiver.",
                    "ercx | A successful call of `transferFrom` UPDATES the balance of users who are neither the tokenSender nor the tokenReceiver.",
                    "ercx | Self `transfer` call of zero amount is NOT ALLOWED or it MODIFIES the balance.",
                    "ercx | A `msg.sender` CANNOT call `transfer` of her total balance amount of zero to a tokenReceiver or the balances were modified."
                ],
                "theftOrInflation": [
                    "ercx | Multiple calls of `transferFrom` ARE allowed even though the allowance has reached zero."
                ],
                "viewInaccuracies": [
                    "ercx | A `msg.sender` CANNOT retrieve his/her own balance.",
                    "ercx | A `msg.sender` CANNOT retrieve balance of an address different from his/hers."
                ]
            },
            "name": " | Lido: LDO Token | MiniMeToken(Lido DAO Token)"
        },
        "0x6810e776880C02933D47DB1b9fc05908e5386b96": {
            "issues": {},
            "name": " | Gnosis (GNO) | GnosisToken(Gnosis Token)"
        },
        "0x6982508145454Ce325dDbE47a25d4ec3d2311933": {
            "issues": {
                "adminSeizure": [
                    "de.fi | Wallets can be blacklisted from being able to transfer, swap or sell this token.",
                    "de.fi | The max/min amount of token transferred can be limited."
                ]
            },
            "name": " | PepeToken(Pepe)"
        },
        "0x6B175474E89094C44Da98b954EedeAC495271d0F": {
            "issues": {},
            "name": " | Dai Stablecoin | Dai(Dai Stablecoin)"
        },
        "0x6B3595068778DD592e39A122f4f5a5cF09C90fE2": {
            "issues": {
                "allowanceBugs": [
                    "ercx | Multiple `transfer` calls of positive amounts are NOT ALLOWED even though the sum of the transferred amounts is less than or equal to the tokenSender's balance.",
                    "ercx | Multiple `transferFrom` calls of positive amounts are NOT ALLOWED even though the sum of the transferred amounts is  less than or equal to the tokenSender's balance and approvals are given by the tokenSender.",
                    "ercx | A tokenReceiver CANNOT call `transferFrom` of the tokenSender's total balance amount even though tokenSender has approved that.",
                    "ercx | A tokenReceiver CANNOT call `transferFrom` of the tokenSender's total balance amount of zero."
                ],
                "balanceVariability": [
                    "ercx | Test fee taking transfer [[[not found]]]",
                    "ercx | Test fee taking transfer from [[[not found]]]",
                    "ercx | Self `transfer` call of positive amount is NOT ALLOWED or it MODIFIED the balance.",
                    "ercx | A `msg.sender` CANNOT call `transfer` of her total balance amount to a tokenReceiver or the balances were not modified as expected.",
                    "ercx | The contract's `totalSupply` variable IS altered after `transfer` is called.",
                    "ercx | The contract's `totalSupply` variable IS altered after `transferFrom` is called.",
                    "ercx | A successful call of `transfer` UPDATES the balance of users who are neither the tokenSender nor the tokenReceiver.",
                    "ercx | A successful call of `transferFrom` UPDATES the balance of users who are neither the tokenSender nor the tokenReceiver.",
                    "ercx | Self `transfer` call of zero amount is NOT ALLOWED or it MODIFIES the balance.",
                    "ercx | A `msg.sender` CANNOT call `transfer` of her total balance amount of zero to a tokenReceiver or the balances were modified."
                ],
                "theftOrInflation": [
                    "ercx | Multiple calls of `transferFrom` ARE allowed even though the allowance has reached zero."
                ],
                "viewInaccuracies": [
                    "ercx | A `msg.sender` CANNOT retrieve his/her own balance.",
                    "ercx | A `msg.sender` CANNOT retrieve balance of an address different from his/hers."
                ]
            },
            "name": " | SushiSwap: SUSHI Token | SushiToken(SushiToken)"
        },
        "0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0": {
            "issues": {
                "adminSeizure": [
                    "de.fi | Token transfers can be paused, preventing swapping or selling."
                ]
            },
            "name": " | Polygon (Matic): Matic Token | MaticToken(Matic Token)"
        },
        "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0": {
            "issues": {},
            "name": " | Lido: wstETH Token | WstETH(Wrapped liquid staked Ether 2.0)"
        },
        "0x95aD61b0a150d79219dCF64E1E6Cc01f0B64C4cE": {
            "issues": {},
            "name": " | Shiba Inu: SHIB Token | TokenMintERC20Token(SHIBA INU)"
        },
        "0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2": {
            "issues": {
                "adminSeizure": [
                    "de.fi | Token transfers can be paused, preventing swapping or selling."
                ]
            },
            "name": " | Maker (MKR) | DSToken(Maker)"
        },
        "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48": {
            "issues": {
                "adminSeizure": [
                    "de.fi | Token transfers can be paused, preventing swapping or selling.",
                    "de.fi | Wallets can be blacklisted from being able to transfer, swap or sell this token."
                ]
            },
            "name": " | USD Coin (USDC) | FiatTokenV2_1"
        },
        "0xA2cd3D43c775978A96BdBf12d733D5A1ED94fb18": {
            "issues": {},
            "name": " | Chain (XCN) | Chain(Chain)"
        },
        "0xBBbbCA6A901c926F240b89EacB641d8Aec7AEafD": {
            "issues": {},
            "name": " | LoopringCoin V2 (LRC) | LRC_v2(LoopringCoin V2)"
        },
        "0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F": {
            "issues": {
                "allowanceBugs": [
                    "ercx | Multiple `transfer` calls of positive amounts are NOT ALLOWED even though the sum of the transferred amounts is less than or equal to the tokenSender's balance.",
                    "ercx | Multiple `transferFrom` calls of positive amounts are NOT ALLOWED even though the sum of the transferred amounts is  less than or equal to the tokenSender's balance and approvals are given by the tokenSender.",
                    "ercx | A tokenReceiver CANNOT call `transferFrom` of the tokenSender's total balance amount even though tokenSender has approved that.",
                    "ercx | A tokenReceiver CANNOT call `transferFrom` of the tokenSender's total balance amount of zero."
                ],
                "balanceVariability": [
                    "ercx | The `transferFrom` function HAS the potential to take fees.",
                    "ercx | The `transfer` function TAKES fees at test execution time.",
                    "ercx | The `transfer` function HAS the potential to take fees.",
                    "ercx | The `transfer` function TAKES fees at test execution time.",
                    "ercx | Self `transfer` call of positive amount is NOT ALLOWED or it MODIFIED the balance.",
                    "ercx | A `msg.sender` CANNOT call `transfer` of her total balance amount to a tokenReceiver or the balances were not modified as expected.",
                    "ercx | The contract's `totalSupply` variable IS altered after `transfer` is called.",
                    "ercx | The contract's `totalSupply` variable IS altered after `transferFrom` is called.",
                    "ercx | A successful call of `transfer` UPDATES the balance of users who are neither the tokenSender nor the tokenReceiver.",
                    "ercx | A successful call of `transferFrom` UPDATES the balance of users who are neither the tokenSender nor the tokenReceiver.",
                    "ercx | Self `transfer` call of zero amount is NOT ALLOWED or it MODIFIES the balance.",
                    "ercx | A `msg.sender` CANNOT call `transfer` of her total balance amount of zero to a tokenReceiver or the balances were modified."
                ],
                "theftOrInflation": [
                    "ercx | Multiple calls of `transferFrom` ARE allowed even though the allowance has reached zero."
                ],
                "viewInaccuracies": [
                    "ercx | A `msg.sender` CANNOT retrieve his/her own balance.",
                    "ercx | A `msg.sender` CANNOT retrieve balance of an address different from his/hers."
                ]
            },
            "name": " | Synthetix Network Token (SNX) | ProxyERC20(Synthetix Network Token)"
        },
        "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2": {
            "issues": {},
            "name": " | 5,755,209.44263941 Ether | WETH9(Wrapped Ether)"
        },
        "0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72": {
            "issues": {},
            "name": " | 0 Ether | TimelockController"
        },
        "0xC669928185DbCE49d2230CC9B0979BE6DC797957": {
            "issues": {},
            "name": " | BitTorrent (BTT) | BTT(BitTorrent)"
        },
        "0xbC396689893D065F41bc2C6EcbeE5e0085233447": {
            "issues": {},
            "name": " | Perpetual (PERP) | PerpToken(Perpetual)"
        },
        "0xdeFA4e8a7bcBA345F687a2f1456F5Edd9CE97202": {
            "issues": {},
            "name": " | Kyber Network Crystal v2 (KNC) | KyberNetworkTokenV2"
        }
    },
    "optimism": {
        "0x1F32b1c2345538c0c6f582fCB022739c4A194Ebb": {
            "issues": {},
            "name": " | ERC20Bridged"
        },
        "0x350a791Bfc2C21F9Ed5d10980Dad2e2638ffa7f6": {
            "issues": {},
            "name": ""
        },
        "0x4200000000000000000000000000000000000006": {
            "issues": {},
            "name": " | OVM_ETH(Wrapped Ether)"
        },
        "0x4200000000000000000000000000000000000042": {
            "issues": {},
            "name": " | GovernanceToken(Optimism)"
        },
        "0x67CCEA5bb16181E7b4109c9c2143c24a1c2205Be": {
            "issues": {},
            "name": " | CrossChainCanonicalFXS(Frax Share)"
        },
        "0x68f180fcCe6836688e9084f035309E29Bf0A2095": {
            "issues": {},
            "name": " | WBTC(Wrapped BTC)"
        },
        "0x7F5c764cBc14f9669B88837ca1490cCa17c31607": {
            "issues": {
                "adminSeizure": [
                    "de.fi | Token transfers can be paused, preventing swapping or selling.",
                    "de.fi | Wallets can be blacklisted from being able to transfer, swap or sell this token."
                ]
            },
            "name": " | OVMFiatToken(USD Coin)"
        },
        "0x9e1028F5F1D5eDE59748FFceE5532509976840E0": {
            "issues": {},
            "name": " | L2StandardERC20(Perpetual)"
        },
        "0xFdb794692724153d1488CcdBE0C56c252596735F": {
            "issues": {},
            "name": " | L2StandardERC20(Lido DAO Token)"
        },
        "0xa00E3A3511aAC35cA78530c85007AFCd31753819": {
            "issues": {},
            "name": " | L2StandardERC20(Kyber Network Crystal v2)"
        },
        "0xc40F949F8a4e094D1b49a23ea9241D289B7b2819": {
            "issues": {},
            "name": " | L2StandardERC20(LUSD Stablecoin)"
        }
    },
    "polygon": {
        "0x03b54A6e9a984069379fae1a4fC4dBAE93B3bCCD": {
            "issues": {},
            "name": " | Wrapped liquid staked Ether 2.0 (Po... (wstETH) | UChildERC20"
        },
        "0x1BFD67037B42Cf73acF2047067bd4F2C47D9BfD6": {
            "issues": {},
            "name": " | (PoS) Wrapped BTC (WBTC) | UChildERC20"
        },
        "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174": {
            "issues": {
                "adminSeizure": [
                    "de.fi | Token transfers can be paused, preventing swapping or selling.",
                    "de.fi | Wallets can be blacklisted from being able to transfer, swap or sell this token."
                ]
            },
            "name": " | USD Coin (PoS) (USDC) | UChildAdministrableERC20"
        },
        "0x53E0bca35eC356BD5ddDFebbD1Fc0fD03FaBad39": {
            "issues": {},
            "name": " | ChainLink Token (LINK) | ChildERC20(ChainLink Token)"
        },
        "0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619": {
            "issues": {},
            "name": " | 0 MATIC | MaticWETH(Wrapped Ether)"
        },
        "0x9a71012B13CA4d3D0Cdc72A177DF3ef03b0E76A3": {
            "issues": {},
            "name": " | UChildERC20"
        },
        "0xBbba073C31bF03b8ACf7c28EF0738DeCF3695683": {
            "issues": {},
            "name": " | 0 MATIC | PolygonSand(SAND)"
        },
        "0xD6DF932A45C0f255f85145f286eA0b292B21C90B": {
            "issues": {},
            "name": " | Aave: AAVE Token | UChildERC20"
        }
    },
    "zksync": {
        "0x3355df6D4c9C3035724Fd0e3914dE96A5a83aaf4": {
            "issues": {},
            "name": ""
        },
        "0x493257fD37EDB34451f62EDf8D2a0C418852bA4C": {
            "issues": {},
            "name": ""
        },
        "0x5AEa5775959fBC2557Cc8789bC1bf90A239D9a91": {
            "issues": {},
            "name": " | TransparentUpgradeableProxy"
        },
        "0xBBeB516fb02a01611cBBE0453Fe3c580D7281011": {
            "issues": {},
            "name": ""
        }
    }
}